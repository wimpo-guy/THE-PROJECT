 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 101 | Scripts: 14 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.HDPanel
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[HDPanel]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.HDPanel.LocalScript
G2L["2"] = Instance.new("LocalScript", G2L["1"]);



-- StarterGui.HDPanel.Panel
G2L["3"] = Instance.new("CanvasGroup", G2L["1"]);
G2L["3"]["Visible"] = false;
G2L["3"]["GroupTransparency"] = 1;
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Name"] = [[Panel]];
G2L["3"]["BackgroundTransparency"] = 1;


-- StarterGui.HDPanel.Panel.Frame
G2L["4"] = Instance.new("Frame", G2L["3"]);
G2L["4"]["ZIndex"] = 250;
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4"]["Size"] = UDim2.new(0.44496, 0, 0.49254, 0);
G2L["4"]["Position"] = UDim2.new(0.49961, 0, 0.49938, 0);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.HDPanel.Panel.Frame.UICorner
G2L["5"] = Instance.new("UICorner", G2L["4"]);
G2L["5"]["CornerRadius"] = UDim.new(0, 13);


-- StarterGui.HDPanel.Panel.Frame.TextLabel
G2L["6"] = Instance.new("TextLabel", G2L["4"]);
G2L["6"]["TextWrapped"] = true;
G2L["6"]["Interactable"] = false;
G2L["6"]["ZIndex"] = 250;
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["TextSize"] = 14;
G2L["6"]["TextScaled"] = true;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["FontFace"] = Font.new([[rbxassetid://12187365364]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["BackgroundTransparency"] = 1;
G2L["6"]["Size"] = UDim2.new(0.15152, 0, 0.08447, 0);
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Text"] = [[Panel]];
G2L["6"]["Position"] = UDim2.new(0.08712, 0, 0.0327, 0);


-- StarterGui.HDPanel.Panel.Frame.ImageLabel
G2L["7"] = Instance.new("ImageLabel", G2L["4"]);
G2L["7"]["Interactable"] = false;
G2L["7"]["ZIndex"] = 250;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["ScaleType"] = Enum.ScaleType.Fit;
G2L["7"]["Image"] = [[rbxassetid://76993908008305]];
G2L["7"]["Size"] = UDim2.new(0.07576, 0, 0.10899, 0);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Position"] = UDim2.new(0.01136, 0, 0.0218, 0);


-- StarterGui.HDPanel.Panel.Frame.ImageLabel.UIAspectRatioConstraint
G2L["8"] = Instance.new("UIAspectRatioConstraint", G2L["7"]);



-- StarterGui.HDPanel.Panel.Frame.UIAspectRatioConstraint
G2L["9"] = Instance.new("UIAspectRatioConstraint", G2L["4"]);
G2L["9"]["AspectRatio"] = 1.43869;


-- StarterGui.HDPanel.Panel.Frame.antis
G2L["a"] = Instance.new("Frame", G2L["4"]);
G2L["a"]["ZIndex"] = 250;
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(86, 86, 86);
G2L["a"]["Size"] = UDim2.new(0.95195, 0, 0.70845, 0);
G2L["a"]["Position"] = UDim2.new(0.02462, 0, 0.17439, 0);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Name"] = [[antis]];
G2L["a"]["BackgroundTransparency"] = 0.8;


-- StarterGui.HDPanel.Panel.Frame.antis.UICorner
G2L["b"] = Instance.new("UICorner", G2L["a"]);



-- StarterGui.HDPanel.Panel.Frame.antis.anticlientcommands
G2L["c"] = Instance.new("Frame", G2L["a"]);
G2L["c"]["ZIndex"] = 250;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["c"]["Position"] = UDim2.new(0.0479, 0, 0.08966, 0);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Name"] = [[anticlientcommands]];
G2L["c"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.antis.anticlientcommands.UICorner
G2L["d"] = Instance.new("UICorner", G2L["c"]);



-- StarterGui.HDPanel.Panel.Frame.antis.anticlientcommands.TextLabel
G2L["e"] = Instance.new("TextLabel", G2L["c"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["Interactable"] = false;
G2L["e"]["ZIndex"] = 250;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextScaled"] = true;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["RichText"] = true;
G2L["e"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[Anti client commands]];


-- StarterGui.HDPanel.Panel.Frame.antis.anticlientcommands.toggle
G2L["f"] = Instance.new("TextButton", G2L["c"]);
G2L["f"]["TextWrapped"] = true;
G2L["f"]["BorderSizePixel"] = 0;
G2L["f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["TextSize"] = 14;
G2L["f"]["TextScaled"] = true;
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["RichText"] = true;
G2L["f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["f"]["ZIndex"] = 250;
G2L["f"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["f"]["BackgroundTransparency"] = 0.9;
G2L["f"]["Name"] = [[toggle]];
G2L["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["Text"] = [[False]];
G2L["f"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.antis.anticlientcommands.toggle.UICorner
G2L["10"] = Instance.new("UICorner", G2L["f"]);



-- StarterGui.HDPanel.Panel.Frame.antis.anticlientcommands.toggle.LocalScript
G2L["11"] = Instance.new("LocalScript", G2L["f"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antideath
G2L["12"] = Instance.new("Frame", G2L["a"]);
G2L["12"]["ZIndex"] = 250;
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["12"]["Position"] = UDim2.new(0.66667, 0, 0.08966, 0);
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Name"] = [[antideath]];
G2L["12"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.antis.antideath.UICorner
G2L["13"] = Instance.new("UICorner", G2L["12"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antideath.TextLabel
G2L["14"] = Instance.new("TextLabel", G2L["12"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["Interactable"] = false;
G2L["14"]["ZIndex"] = 250;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["RichText"] = true;
G2L["14"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[Anti death]];


-- StarterGui.HDPanel.Panel.Frame.antis.antideath.toggle
G2L["15"] = Instance.new("TextButton", G2L["12"]);
G2L["15"]["TextWrapped"] = true;
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["TextSize"] = 14;
G2L["15"]["TextScaled"] = true;
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["RichText"] = true;
G2L["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["15"]["ZIndex"] = 250;
G2L["15"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["15"]["BackgroundTransparency"] = 0.9;
G2L["15"]["Name"] = [[toggle]];
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Text"] = [[False]];
G2L["15"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.antis.antideath.toggle.UICorner
G2L["16"] = Instance.new("UICorner", G2L["15"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antideath.toggle.LocalScript
G2L["17"] = Instance.new("LocalScript", G2L["15"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antijail
G2L["18"] = Instance.new("Frame", G2L["a"]);
G2L["18"]["ZIndex"] = 250;
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["18"]["Position"] = UDim2.new(0.35506, 0, 0.51689, 0);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Name"] = [[antijail]];
G2L["18"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.antis.antijail.UICorner
G2L["19"] = Instance.new("UICorner", G2L["18"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antijail.TextLabel
G2L["1a"] = Instance.new("TextLabel", G2L["18"]);
G2L["1a"]["TextWrapped"] = true;
G2L["1a"]["Interactable"] = false;
G2L["1a"]["ZIndex"] = 250;
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["TextSize"] = 14;
G2L["1a"]["TextScaled"] = true;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a"]["BackgroundTransparency"] = 1;
G2L["1a"]["RichText"] = true;
G2L["1a"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Text"] = [[Anti jail]];


-- StarterGui.HDPanel.Panel.Frame.antis.antijail.toggle
G2L["1b"] = Instance.new("TextButton", G2L["18"]);
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["TextScaled"] = true;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["RichText"] = true;
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1b"]["ZIndex"] = 250;
G2L["1b"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["1b"]["BackgroundTransparency"] = 0.9;
G2L["1b"]["Name"] = [[toggle]];
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[False]];
G2L["1b"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.antis.antijail.toggle.UICorner
G2L["1c"] = Instance.new("UICorner", G2L["1b"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antijail.toggle.LocalScript
G2L["1d"] = Instance.new("LocalScript", G2L["1b"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antimute
G2L["1e"] = Instance.new("Frame", G2L["a"]);
G2L["1e"]["ZIndex"] = 250;
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["1e"]["Position"] = UDim2.new(0.35529, 0, 0.08966, 0);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Name"] = [[antimute]];
G2L["1e"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.antis.antimute.UICorner
G2L["1f"] = Instance.new("UICorner", G2L["1e"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antimute.TextLabel
G2L["20"] = Instance.new("TextLabel", G2L["1e"]);
G2L["20"]["TextWrapped"] = true;
G2L["20"]["Interactable"] = false;
G2L["20"]["ZIndex"] = 250;
G2L["20"]["BorderSizePixel"] = 0;
G2L["20"]["TextSize"] = 14;
G2L["20"]["TextScaled"] = true;
G2L["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["20"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20"]["BackgroundTransparency"] = 1;
G2L["20"]["RichText"] = true;
G2L["20"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["20"]["Text"] = [[Anti mute]];


-- StarterGui.HDPanel.Panel.Frame.antis.antimute.toggle
G2L["21"] = Instance.new("TextButton", G2L["1e"]);
G2L["21"]["TextWrapped"] = true;
G2L["21"]["BorderSizePixel"] = 0;
G2L["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["TextSize"] = 14;
G2L["21"]["TextScaled"] = true;
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["RichText"] = true;
G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["21"]["ZIndex"] = 250;
G2L["21"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["21"]["BackgroundTransparency"] = 0.9;
G2L["21"]["Name"] = [[toggle]];
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Text"] = [[False]];
G2L["21"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.antis.antimute.toggle.UICorner
G2L["22"] = Instance.new("UICorner", G2L["21"]);



-- StarterGui.HDPanel.Panel.Frame.antis.antimute.toggle.LocalScript
G2L["23"] = Instance.new("LocalScript", G2L["21"]);



-- StarterGui.HDPanel.Panel.Frame.antis.UIAspectRatioConstraint
G2L["24"] = Instance.new("UIAspectRatioConstraint", G2L["a"]);
G2L["24"]["AspectRatio"] = 1.9332;


-- StarterGui.HDPanel.Panel.Frame.antis.removeblur
G2L["25"] = Instance.new("Frame", G2L["a"]);
G2L["25"]["ZIndex"] = 250;
G2L["25"]["BorderSizePixel"] = 0;
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["25"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["25"]["Position"] = UDim2.new(0.04737, 0, 0.51689, 0);
G2L["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25"]["Name"] = [[removeblur]];
G2L["25"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.antis.removeblur.UICorner
G2L["26"] = Instance.new("UICorner", G2L["25"]);



-- StarterGui.HDPanel.Panel.Frame.antis.removeblur.TextLabel
G2L["27"] = Instance.new("TextLabel", G2L["25"]);
G2L["27"]["TextWrapped"] = true;
G2L["27"]["Interactable"] = false;
G2L["27"]["ZIndex"] = 250;
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["TextSize"] = 14;
G2L["27"]["TextScaled"] = true;
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["27"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["BackgroundTransparency"] = 1;
G2L["27"]["RichText"] = true;
G2L["27"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["Text"] = [[Remove all blurs]];


-- StarterGui.HDPanel.Panel.Frame.antis.removeblur.toggle
G2L["28"] = Instance.new("TextButton", G2L["25"]);
G2L["28"]["TextWrapped"] = true;
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["TextSize"] = 14;
G2L["28"]["TextScaled"] = true;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["RichText"] = true;
G2L["28"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["28"]["ZIndex"] = 250;
G2L["28"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["28"]["BackgroundTransparency"] = 0.9;
G2L["28"]["Name"] = [[toggle]];
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Text"] = [[Activate]];
G2L["28"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.antis.removeblur.toggle.UICorner
G2L["29"] = Instance.new("UICorner", G2L["28"]);



-- StarterGui.HDPanel.Panel.Frame.antis.removeblur.toggle.LocalScript
G2L["2a"] = Instance.new("LocalScript", G2L["28"]);



-- StarterGui.HDPanel.Panel.Frame.misc
G2L["2b"] = Instance.new("Frame", G2L["4"]);
G2L["2b"]["Visible"] = false;
G2L["2b"]["ZIndex"] = 250;
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(86, 86, 86);
G2L["2b"]["Size"] = UDim2.new(0.95195, 0, 0.70845, 0);
G2L["2b"]["Position"] = UDim2.new(0.02462, 0, 0.17439, 0);
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["Name"] = [[misc]];
G2L["2b"]["BackgroundTransparency"] = 0.8;


-- StarterGui.HDPanel.Panel.Frame.misc.UICorner
G2L["2c"] = Instance.new("UICorner", G2L["2b"]);



-- StarterGui.HDPanel.Panel.Frame.misc.periastron
G2L["2d"] = Instance.new("Frame", G2L["2b"]);
G2L["2d"]["ZIndex"] = 250;
G2L["2d"]["BorderSizePixel"] = 0;
G2L["2d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2d"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["2d"]["Position"] = UDim2.new(0.0479, 0, 0.08966, 0);
G2L["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d"]["Name"] = [[periastron]];
G2L["2d"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.misc.periastron.UICorner
G2L["2e"] = Instance.new("UICorner", G2L["2d"]);



-- StarterGui.HDPanel.Panel.Frame.misc.periastron.TextLabel
G2L["2f"] = Instance.new("TextLabel", G2L["2d"]);
G2L["2f"]["TextWrapped"] = true;
G2L["2f"]["Interactable"] = false;
G2L["2f"]["ZIndex"] = 250;
G2L["2f"]["BorderSizePixel"] = 0;
G2L["2f"]["TextSize"] = 14;
G2L["2f"]["TextScaled"] = true;
G2L["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2f"]["BackgroundTransparency"] = 1;
G2L["2f"]["RichText"] = true;
G2L["2f"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["2f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f"]["Text"] = [[Every periastron]];


-- StarterGui.HDPanel.Panel.Frame.misc.periastron.toggle
G2L["30"] = Instance.new("TextButton", G2L["2d"]);
G2L["30"]["TextWrapped"] = true;
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["TextSize"] = 14;
G2L["30"]["TextScaled"] = true;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["RichText"] = true;
G2L["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["30"]["ZIndex"] = 250;
G2L["30"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["30"]["BackgroundTransparency"] = 0.9;
G2L["30"]["Name"] = [[toggle]];
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Text"] = [[Activate]];
G2L["30"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.misc.periastron.toggle.UICorner
G2L["31"] = Instance.new("UICorner", G2L["30"]);



-- StarterGui.HDPanel.Panel.Frame.misc.periastron.toggle.LocalScript
G2L["32"] = Instance.new("LocalScript", G2L["30"]);



-- StarterGui.HDPanel.Panel.Frame.misc.UIAspectRatioConstraint
G2L["33"] = Instance.new("UIAspectRatioConstraint", G2L["2b"]);
G2L["33"]["AspectRatio"] = 1.9332;


-- StarterGui.HDPanel.Panel.Frame.misc.gear
G2L["34"] = Instance.new("Frame", G2L["2b"]);
G2L["34"]["ZIndex"] = 250;
G2L["34"]["BorderSizePixel"] = 0;
G2L["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["34"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["34"]["Position"] = UDim2.new(0.355, 0, 0.09, 0);
G2L["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["34"]["Name"] = [[gear]];
G2L["34"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.misc.gear.UICorner
G2L["35"] = Instance.new("UICorner", G2L["34"]);



-- StarterGui.HDPanel.Panel.Frame.misc.gear.TextLabel
G2L["36"] = Instance.new("TextLabel", G2L["34"]);
G2L["36"]["TextWrapped"] = true;
G2L["36"]["Interactable"] = false;
G2L["36"]["ZIndex"] = 250;
G2L["36"]["BorderSizePixel"] = 0;
G2L["36"]["TextSize"] = 14;
G2L["36"]["TextScaled"] = true;
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36"]["BackgroundTransparency"] = 1;
G2L["36"]["RichText"] = true;
G2L["36"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["Text"] = [[GEARS]];


-- StarterGui.HDPanel.Panel.Frame.misc.gear.toggle
G2L["37"] = Instance.new("TextButton", G2L["34"]);
G2L["37"]["TextWrapped"] = true;
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37"]["TextSize"] = 14;
G2L["37"]["TextScaled"] = true;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37"]["RichText"] = true;
G2L["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["37"]["ZIndex"] = 250;
G2L["37"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["37"]["BackgroundTransparency"] = 0.9;
G2L["37"]["Name"] = [[toggle]];
G2L["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["Text"] = [[Activate]];
G2L["37"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.misc.gear.toggle.UICorner
G2L["38"] = Instance.new("UICorner", G2L["37"]);



-- StarterGui.HDPanel.Panel.Frame.misc.gear.toggle.LocalScript
G2L["39"] = Instance.new("LocalScript", G2L["37"]);



-- StarterGui.HDPanel.Panel.Frame.misc.clone
G2L["3a"] = Instance.new("Frame", G2L["2b"]);
G2L["3a"]["ZIndex"] = 250;
G2L["3a"]["BorderSizePixel"] = 0;
G2L["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["3a"]["Position"] = UDim2.new(0.667, 0, 0.09, 0);
G2L["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a"]["Name"] = [[clone]];
G2L["3a"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.misc.clone.UICorner
G2L["3b"] = Instance.new("UICorner", G2L["3a"]);



-- StarterGui.HDPanel.Panel.Frame.misc.clone.TextLabel
G2L["3c"] = Instance.new("TextLabel", G2L["3a"]);
G2L["3c"]["TextWrapped"] = true;
G2L["3c"]["Interactable"] = false;
G2L["3c"]["ZIndex"] = 250;
G2L["3c"]["BorderSizePixel"] = 0;
G2L["3c"]["TextSize"] = 14;
G2L["3c"]["TextScaled"] = true;
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["BackgroundTransparency"] = 1;
G2L["3c"]["RichText"] = true;
G2L["3c"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["Text"] = [[Doge army]];


-- StarterGui.HDPanel.Panel.Frame.misc.clone.toggle
G2L["3d"] = Instance.new("TextButton", G2L["3a"]);
G2L["3d"]["TextWrapped"] = true;
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["TextSize"] = 14;
G2L["3d"]["TextScaled"] = true;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["RichText"] = true;
G2L["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3d"]["ZIndex"] = 250;
G2L["3d"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["3d"]["BackgroundTransparency"] = 0.9;
G2L["3d"]["Name"] = [[toggle]];
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Text"] = [[Activate]];
G2L["3d"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.misc.clone.toggle.UICorner
G2L["3e"] = Instance.new("UICorner", G2L["3d"]);



-- StarterGui.HDPanel.Panel.Frame.misc.clone.toggle.LocalScript
G2L["3f"] = Instance.new("LocalScript", G2L["3d"]);



-- StarterGui.HDPanel.Panel.Frame.misc.meteorz
G2L["40"] = Instance.new("Frame", G2L["2b"]);
G2L["40"]["ZIndex"] = 250;
G2L["40"]["BorderSizePixel"] = 0;
G2L["40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["40"]["Position"] = UDim2.new(0.047, 0, 0.517, 0);
G2L["40"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["40"]["Name"] = [[meteorz]];
G2L["40"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.misc.meteorz.UICorner
G2L["41"] = Instance.new("UICorner", G2L["40"]);



-- StarterGui.HDPanel.Panel.Frame.misc.meteorz.TextLabel
G2L["42"] = Instance.new("TextLabel", G2L["40"]);
G2L["42"]["TextWrapped"] = true;
G2L["42"]["Interactable"] = false;
G2L["42"]["ZIndex"] = 250;
G2L["42"]["BorderSizePixel"] = 0;
G2L["42"]["TextSize"] = 14;
G2L["42"]["TextScaled"] = true;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["BackgroundTransparency"] = 1;
G2L["42"]["RichText"] = true;
G2L["42"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Text"] = [[Meteors]];


-- StarterGui.HDPanel.Panel.Frame.misc.meteorz.toggle
G2L["43"] = Instance.new("TextButton", G2L["40"]);
G2L["43"]["TextWrapped"] = true;
G2L["43"]["BorderSizePixel"] = 0;
G2L["43"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43"]["TextSize"] = 14;
G2L["43"]["TextScaled"] = true;
G2L["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43"]["RichText"] = true;
G2L["43"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["43"]["ZIndex"] = 250;
G2L["43"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["43"]["BackgroundTransparency"] = 0.9;
G2L["43"]["Name"] = [[toggle]];
G2L["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43"]["Text"] = [[Activate]];
G2L["43"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.misc.meteorz.toggle.UICorner
G2L["44"] = Instance.new("UICorner", G2L["43"]);



-- StarterGui.HDPanel.Panel.Frame.misc.meteorz.toggle.LocalScript
G2L["45"] = Instance.new("LocalScript", G2L["43"]);



-- StarterGui.HDPanel.Panel.Frame.misc.goner
G2L["46"] = Instance.new("Frame", G2L["2b"]);
G2L["46"]["ZIndex"] = 250;
G2L["46"]["BorderSizePixel"] = 0;
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["46"]["Size"] = UDim2.new(0.28942, 0, 0.38276, 0);
G2L["46"]["Position"] = UDim2.new(0.35492, 0, 0.517, 0);
G2L["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["46"]["Name"] = [[goner]];
G2L["46"]["BackgroundTransparency"] = 0.9;


-- StarterGui.HDPanel.Panel.Frame.misc.goner.UICorner
G2L["47"] = Instance.new("UICorner", G2L["46"]);



-- StarterGui.HDPanel.Panel.Frame.misc.goner.toggle
G2L["48"] = Instance.new("TextButton", G2L["46"]);
G2L["48"]["TextWrapped"] = true;
G2L["48"]["BorderSizePixel"] = 0;
G2L["48"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["48"]["TextSize"] = 14;
G2L["48"]["TextScaled"] = true;
G2L["48"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["48"]["RichText"] = true;
G2L["48"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["48"]["ZIndex"] = 250;
G2L["48"]["Size"] = UDim2.new(0.89828, 0, 0.46563, 0);
G2L["48"]["BackgroundTransparency"] = 0.9;
G2L["48"]["Name"] = [[toggle]];
G2L["48"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["48"]["Text"] = [[Activate]];
G2L["48"]["Position"] = UDim2.new(0.0446, 0, 0.43769, 0);


-- StarterGui.HDPanel.Panel.Frame.misc.goner.toggle.UICorner
G2L["49"] = Instance.new("UICorner", G2L["48"]);



-- StarterGui.HDPanel.Panel.Frame.misc.goner.toggle.LocalScript
G2L["4a"] = Instance.new("LocalScript", G2L["48"]);



-- StarterGui.HDPanel.Panel.Frame.misc.goner.TextLabel
G2L["4b"] = Instance.new("TextLabel", G2L["46"]);
G2L["4b"]["TextWrapped"] = true;
G2L["4b"]["Interactable"] = false;
G2L["4b"]["ZIndex"] = 250;
G2L["4b"]["BorderSizePixel"] = 0;
G2L["4b"]["TextSize"] = 14;
G2L["4b"]["TextScaled"] = true;
G2L["4b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b"]["BackgroundTransparency"] = 1;
G2L["4b"]["RichText"] = true;
G2L["4b"]["Size"] = UDim2.new(0.99675, 0, 0.34239, 0);
G2L["4b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b"]["Text"] = [[Goner]];


-- StarterGui.HDPanel.Panel.Frame.page2
G2L["4c"] = Instance.new("TextButton", G2L["4"]);
G2L["4c"]["TextWrapped"] = true;
G2L["4c"]["BorderSizePixel"] = 0;
G2L["4c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c"]["TextSize"] = 14;
G2L["4c"]["TextScaled"] = true;
G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4c"]["ZIndex"] = 250;
G2L["4c"]["Size"] = UDim2.new(0.20185, 0, 0.07071, 0);
G2L["4c"]["BackgroundTransparency"] = 0.8;
G2L["4c"]["Name"] = [[page2]];
G2L["4c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c"]["Text"] = [[Page 2]];
G2L["4c"]["Position"] = UDim2.new(0.77406, 0, 0.90657, 0);


-- StarterGui.HDPanel.Panel.Frame.page2.UICorner
G2L["4d"] = Instance.new("UICorner", G2L["4c"]);



-- StarterGui.HDPanel.Panel.Frame.page2.LocalScript
G2L["4e"] = Instance.new("LocalScript", G2L["4c"]);



-- StarterGui.HDPanel.Panel.Frame.page1
G2L["4f"] = Instance.new("TextButton", G2L["4"]);
G2L["4f"]["TextWrapped"] = true;
G2L["4f"]["BorderSizePixel"] = 0;
G2L["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["TextSize"] = 14;
G2L["4f"]["TextScaled"] = true;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4f"]["ZIndex"] = 250;
G2L["4f"]["Size"] = UDim2.new(0.20185, 0, 0.07071, 0);
G2L["4f"]["BackgroundTransparency"] = 0.8;
G2L["4f"]["Name"] = [[page1]];
G2L["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["Text"] = [[Page 1]];
G2L["4f"]["Visible"] = false;
G2L["4f"]["Position"] = UDim2.new(0.77406, 0, 0.90657, 0);


-- StarterGui.HDPanel.Panel.Frame.page1.UICorner
G2L["50"] = Instance.new("UICorner", G2L["4f"]);



-- StarterGui.HDPanel.Panel.Frame.page1.LocalScript
G2L["51"] = Instance.new("LocalScript", G2L["4f"]);



-- StarterGui.HDPanel.Panel.Frame.Shadow
G2L["52"] = Instance.new("ImageLabel", G2L["4"]);
G2L["52"]["ZIndex"] = 249;
G2L["52"]["BorderSizePixel"] = 0;
G2L["52"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["ImageTransparency"] = 0.7;
G2L["52"]["ImageColor3"] = Color3.fromRGB(25, 25, 25);
G2L["52"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["52"]["Image"] = [[rbxassetid://3523728077]];
G2L["52"]["Size"] = UDim2.new(1.13574, 0, 1.87411, 0);
G2L["52"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["52"]["BackgroundTransparency"] = 1;
G2L["52"]["Name"] = [[Shadow]];
G2L["52"]["Position"] = UDim2.new(0.49828, 0, 0.49941, 0);


-- StarterGui.HDPanel.Panel.Frame.Shadow.UIAspectRatioConstraint
G2L["53"] = Instance.new("UIAspectRatioConstraint", G2L["52"]);
G2L["53"]["AspectRatio"] = 0.87187;


-- StarterGui.HDPanel.Panel.Frame.UIGradient
G2L["54"] = Instance.new("UIGradient", G2L["4"]);
G2L["54"]["Rotation"] = 28;
G2L["54"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(207, 255, 252)),ColorSequenceKeypoint.new(0.106, Color3.fromRGB(160, 190, 215)),ColorSequenceKeypoint.new(0.218, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(0.509, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(0.744, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(0.865, Color3.fromRGB(93, 49, 160)),ColorSequenceKeypoint.new(0.938, Color3.fromRGB(169, 115, 214)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(240, 176, 255))};


-- StarterGui.HDPanel.Panel.Frame.UIStroke
G2L["55"] = Instance.new("UIStroke", G2L["4"]);
G2L["55"]["Thickness"] = 1.5;
G2L["55"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.HDPanel.Panel.Frame.UIStroke.UIGradient
G2L["56"] = Instance.new("UIGradient", G2L["55"]);
G2L["56"]["Rotation"] = 28;
G2L["56"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(226, 255, 254)),ColorSequenceKeypoint.new(0.106, Color3.fromRGB(174, 195, 215)),ColorSequenceKeypoint.new(0.218, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(0.509, Color3.fromRGB(26, 26, 26)),ColorSequenceKeypoint.new(0.744, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(0.865, Color3.fromRGB(119, 78, 160)),ColorSequenceKeypoint.new(0.938, Color3.fromRGB(186, 146, 214)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(246, 211, 255))};


-- StarterGui.HDPanel.Welcome
G2L["57"] = Instance.new("CanvasGroup", G2L["1"]);
G2L["57"]["Visible"] = false;
G2L["57"]["GroupTransparency"] = 1;
G2L["57"]["Interactable"] = false;
G2L["57"]["ZIndex"] = 250;
G2L["57"]["BorderSizePixel"] = 0;
G2L["57"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["57"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["57"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57"]["Name"] = [[Welcome]];
G2L["57"]["BackgroundTransparency"] = 1;


-- StarterGui.HDPanel.Welcome.Frame
G2L["58"] = Instance.new("Frame", G2L["57"]);
G2L["58"]["Interactable"] = false;
G2L["58"]["ZIndex"] = 250;
G2L["58"]["BorderSizePixel"] = 0;
G2L["58"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["58"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["58"]["Size"] = UDim2.new(0.41089, 0, 0.45647, 0);
G2L["58"]["Position"] = UDim2.new(0.49961, 0, 0.5, 0);
G2L["58"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.HDPanel.Welcome.Frame.UICorner
G2L["59"] = Instance.new("UICorner", G2L["58"]);
G2L["59"]["CornerRadius"] = UDim.new(0, 13);


-- StarterGui.HDPanel.Welcome.Frame.UIGradient
G2L["5a"] = Instance.new("UIGradient", G2L["58"]);
G2L["5a"]["Rotation"] = -150;
G2L["5a"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(148, 71, 38)),ColorSequenceKeypoint.new(0.152, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(0.509, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(0.830, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(47, 92, 176))};


-- StarterGui.HDPanel.Welcome.Frame.TextLabel
G2L["5b"] = Instance.new("TextLabel", G2L["58"]);
G2L["5b"]["TextWrapped"] = true;
G2L["5b"]["Interactable"] = false;
G2L["5b"]["ZIndex"] = 250;
G2L["5b"]["BorderSizePixel"] = 0;
G2L["5b"]["TextSize"] = 14;
G2L["5b"]["TextScaled"] = true;
G2L["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5b"]["FontFace"] = Font.new([[rbxassetid://12187365364]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5b"]["BackgroundTransparency"] = 1;
G2L["5b"]["Size"] = UDim2.new(0.35606, 0, 0.08992, 0);
G2L["5b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5b"]["Text"] = [[Welcome, player]];
G2L["5b"]["Position"] = UDim2.new(0.375, 0, 0.45504, 0);


-- StarterGui.HDPanel.Welcome.Frame.ImageLabel
G2L["5c"] = Instance.new("ImageLabel", G2L["58"]);
G2L["5c"]["Interactable"] = false;
G2L["5c"]["ZIndex"] = 250;
G2L["5c"]["BorderSizePixel"] = 0;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c"]["ScaleType"] = Enum.ScaleType.Fit;
G2L["5c"]["Image"] = [[rbxassetid://76993908008305]];
G2L["5c"]["Size"] = UDim2.new(0.07576, 0, 0.10899, 0);
G2L["5c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c"]["BackgroundTransparency"] = 1;
G2L["5c"]["Position"] = UDim2.new(0.28788, 0, 0.44687, 0);


-- StarterGui.HDPanel.Welcome.Frame.ImageLabel.UIAspectRatioConstraint
G2L["5d"] = Instance.new("UIAspectRatioConstraint", G2L["5c"]);



-- StarterGui.HDPanel.Welcome.Frame.UIStroke
G2L["5e"] = Instance.new("UIStroke", G2L["58"]);
G2L["5e"]["Thickness"] = 1.5;
G2L["5e"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.HDPanel.Welcome.Frame.UIStroke.UIGradient
G2L["5f"] = Instance.new("UIGradient", G2L["5e"]);
G2L["5f"]["Rotation"] = -150;
G2L["5f"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(205, 98, 52)),ColorSequenceKeypoint.new(0.152, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(0.509, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(0.830, Color3.fromRGB(22, 22, 22)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(59, 117, 223))};


-- StarterGui.HDPanel.Welcome.Frame.UIAspectRatioConstraint
G2L["60"] = Instance.new("UIAspectRatioConstraint", G2L["58"]);
G2L["60"]["AspectRatio"] = 1.43869;


-- StarterGui.HDPanel.Welcome.Frame.Shadow
G2L["61"] = Instance.new("ImageLabel", G2L["58"]);
G2L["61"]["ZIndex"] = 249;
G2L["61"]["BorderSizePixel"] = 0;
G2L["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["61"]["ImageTransparency"] = 0.7;
G2L["61"]["ImageColor3"] = Color3.fromRGB(25, 25, 25);
G2L["61"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["61"]["Image"] = [[rbxassetid://3523728077]];
G2L["61"]["Size"] = UDim2.new(1.13574, 0, 1.87411, 0);
G2L["61"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["61"]["BackgroundTransparency"] = 1;
G2L["61"]["Name"] = [[Shadow]];
G2L["61"]["Position"] = UDim2.new(0.49828, 0, 0.49941, 0);


-- StarterGui.HDPanel.toggle
G2L["62"] = Instance.new("CanvasGroup", G2L["1"]);
G2L["62"]["Visible"] = false;
G2L["62"]["GroupTransparency"] = 1;
G2L["62"]["ZIndex"] = 250;
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62"]["Name"] = [[toggle]];
G2L["62"]["BackgroundTransparency"] = 1;


-- StarterGui.HDPanel.toggle.b
G2L["63"] = Instance.new("ImageButton", G2L["62"]);
G2L["63"]["BorderSizePixel"] = 0;
G2L["63"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63"]["ZIndex"] = 250;
G2L["63"]["Image"] = [[rbxassetid://76993908008305]];
G2L["63"]["Size"] = UDim2.new(0.05774, 0, 0.09328, 0);
G2L["63"]["BackgroundTransparency"] = 1;
G2L["63"]["Name"] = [[b]];
G2L["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63"]["Position"] = UDim2.new(0.46959, 0, 0.88806, 0);


-- StarterGui.HDPanel.toggle.b.LocalScript
G2L["64"] = Instance.new("LocalScript", G2L["63"]);



-- StarterGui.HDPanel.toggle.b.UIAspectRatioConstraint
G2L["65"] = Instance.new("UIAspectRatioConstraint", G2L["63"]);



-- StarterGui.HDPanel.LocalScript
local function C_2()
local script = G2L["2"];
	local welcomeframe = script.Parent.Welcome
	local toggle = script.Parent.toggle
	local ts = game:GetService("TweenService")
	local ti = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
	local t = ts:Create(welcomeframe, ti, {GroupTransparency = 0})
	welcomeframe.Visible = true
	t:Play()
	t.Completed:Connect(function()
		task.wait(2)
		local t2 = ts:Create(welcomeframe, ti, {GroupTransparency = 1})
		t2:Play()
		t2.Completed:Connect(function()
			welcomeframe.Visible = false
		end)
		t2.Completed:Connect(function()
			wait(2)
			local t3 = ts:Create(toggle, ti, {GroupTransparency = 0})
			toggle.Visible = true
			t3:Play()
		end)
	end)
end;
task.spawn(C_2);
-- StarterGui.HDPanel.Panel.Frame.antis.anticlientcommands.toggle.LocalScript
local function C_11()
local script = G2L["11"];
	local player = game.Players.LocalPlayer
	local toggled = false
	local b = script.Parent
	local connection
	
	b.Activated:Connect(function()
		if not toggled then
			toggled = true
			b.Text = "True"
			connection = player.PlayerGui.ChildAdded:Connect(function(obj)
				if obj:IsA("LocalScript") then
					task.wait()
					obj:Destroy()
					game:GetService("StarterGui"):SetCore("SendNotification",{
						Title = "Anti Client Commands", -- Required
						Text = "Attempted client command",
						Icon = "rbxassetid://76993908008305" -- Optional
					})
				end
			end)
		else
			toggled = false
			b.Text = "False"
			if connection then
				connection:Disconnect()
				connection = nil
			end
		end
	end)
	
end;
task.spawn(C_11);
-- StarterGui.HDPanel.Panel.Frame.antis.antideath.toggle.LocalScript
local function C_17()
local script = G2L["17"];
	local button = script.Parent
	local toggled = false
	local player = game.Players.LocalPlayer
	local api = game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminHDClient") or game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminClient")
	local signals = api:FindFirstChild("Signals")
	local diedConnection
	
	button.Activated:Connect(function()
		toggled = not toggled
		button.Text = toggled and "True" or "False"
	
		if toggled then
			local function onDied()
				local request = signals and signals:FindFirstChild("RequestCommandSilent") or signals and signals:FindFirstChild("RequestCommand")
				if request and request:IsA("RemoteFunction") then
					request:InvokeServer(";re me")
				end
			end
	
			local function bind()
				local char = player.Character or player.CharacterAdded:Wait()
				local hum = char:FindFirstChildOfClass("Humanoid")
				if hum then
					diedConnection = hum.Died:Connect(onDied)
				end
			end
	
			bind()
			player.CharacterAdded:Connect(bind)
		else
			if diedConnection then
				diedConnection:Disconnect()
				diedConnection = nil
			end
		end
	end)
	
end;
task.spawn(C_17);
-- StarterGui.HDPanel.Panel.Frame.antis.antijail.toggle.LocalScript
local function C_1d()
local script = G2L["1d"];
	local b = script.Parent
	local toggled = false
	local unjailLoop
	
	b.Activated:Connect(function()
		toggled = not toggled
		b.Text = toggled and "True" or "False"
		if toggled then
			unjailLoop = task.spawn(function()
				while toggled do
					local player = game.Players.LocalPlayer
					local api = game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminHDClient") or game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminClient")
	
					if api then
						local signals = api:FindFirstChild("Signals")
						local request = signals and signals:FindFirstChild("RequestCommandSilent") or signals and signals:FindFirstChild("RequestCommand")
	
						if request and request:IsA("RemoteFunction") then
							local jailName = player.Name .. "'s JailCell"
							local jailCell = workspace:FindFirstChild(jailName)
	
							if jailCell then
								request:InvokeServer(";unjail me")
							end
						end
					else
						warn("HD Admin not found!")
					end
					task.wait()
				end
			end)
		else
		end
	end)
	
end;
task.spawn(C_1d);
-- StarterGui.HDPanel.Panel.Frame.antis.antimute.toggle.LocalScript
local function C_23()
local script = G2L["23"];
	local toggled = false
	local StarterGui = game:GetService("StarterGui")
	local b = script.Parent
	local loopThread
	
	b.Activated:Connect(function()
		if not toggled then
			toggled = true
			b.Text = "True"
			loopThread = task.spawn(function()
				while toggled do
					StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
					task.wait()
				end
			end)
		else
			toggled = false
			b.Text = "False"
		end
	end)
	
end;
task.spawn(C_23);
-- StarterGui.HDPanel.Panel.Frame.antis.removeblur.toggle.LocalScript
local function C_2a()
local script = G2L["2a"];
	script.Parent.Activated:Connect(function()
		local camera = workspace.Camera
		local lighting = game:GetService("Lighting")
		for _, thing in ipairs(lighting:GetChildren()) do
			if thing:IsA("BlurEffect") then
				thing:Destroy()
			end
		end
		for _, thing2 in ipairs(camera:GetChildren()) do
			if thing2:IsA("BlurEffect") then
				thing2:Destroy()
			end
		end
	end)
	
end;
task.spawn(C_2a);
-- StarterGui.HDPanel.Panel.Frame.misc.periastron.toggle.LocalScript
local function C_32()
local script = G2L["32"];
	script.Parent.Activated:Connect(function()
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Periastron command",
			Text = "Gave every Periastron",
			Icon = "rbxassetid://76993908008305"
		})
	
		local api = game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminHDClient") or game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminClient")
		local Signals = api and api:FindFirstChild("Signals")
		local request = Signals and Signals:FindFirstChild("RequestCommandSilent") or Signals and Signals:FindFirstChild("RequestCommand")
		local periastronIds = {
			159229806, 80661504, 99119240, 69499437,
			120307951, 108158379, 73829193, 93136802,
			139577901, 233520257, 2544549379, 80597060
		}
		if request and request:IsA("RemoteFunction") then
			for _, id in ipairs(periastronIds) do
				task.spawn(function()
					request:InvokeServer(";gear me " .. id)
				end)
			end
		end
	end)
	
end;
task.spawn(C_32);
-- StarterGui.HDPanel.Panel.Frame.misc.gear.toggle.LocalScript
local function C_39()
local script = G2L["39"];
	script.Parent.Activated:Connect(function()
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Gear command",
			Text = "Giving gears...",
			Icon = "rbxassetid://76993908008305"
		})
	
		local api = game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminHDClient") or game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminClient")
		local Signals = api and api:FindFirstChild("Signals")
		local request = Signals and Signals:FindFirstChild("RequestCommandSilent") or Signals and Signals:FindFirstChild("RequestCommand")
		local allids = {10468797, 10468915, 10469910, 10472779, 10510024, 10727852, 10730984, 10758456, 10760425, 10831489, 10831509, 10884288, 10910681, 11115851, 11373617, 11377306, 11419319, 11419882, 11450664, 11452821, 11453385, 11563251, 11719016, 11885154, 11895536, 11956382, 11999235, 11999247, 11999279, 12145515, 12187319, 12187348, 12187431, 12504077, 12547976, 12562390, 12562394, 12562495, 12775410, 12848902, 12890798, 12902404, 12909278, 13206856, 13206887, 13206984, 13207169, 13477890, 13477940, 13478015, 13745494, 13838639, 13841367, 14130887, 14131296, 14131602, 14492601, 14516975, 14719505, 14864611, 14876573, 15176169, 15177716, 15179006, 15397778, 15470183, 15470222, 15470359, 15642486, 15668963, 15731350, 15932306, 15970544, 15973049, 15973059, 16200199, 16200204, 16200373, 16200402, 16200420, 16200508, 16201421, 16201628, 16214845, 16216702, 16433862, 16435306, 16435368, 16469499, 16641274, 16688968, 16722267, 16726030, 16726984, 16895215, 16924676, 16951083, 16979083, 16986649, 16986805, 16987194, 17237662, 17237675, 17237692, 17407931, 17527921, 17527923, 17680660, 18010691, 18017365, 18210455, 18268645, 18409191, 18426536, 18446258, 18446266, 18462637, 18466105, 18474459, 18479357, 18479966, 18481407, 18482562, 18482570, 18776718, 18971349, 19111869, 19111883, 19111894, 19328185, 19381970, 19382057, 19395497, 19396450, 19397135, 19399456, 19643249, 19644347, 19703034, 19703041, 19703046, 19703062, 19703476, 19704064, 19704172, 20048880, 20056642, 20064349, 20373160, 20519646, 20577851, 20642023, 20721924, 21064230, 21294489, 21351465, 21392199, 21392417, 21416138, 21420014, 21439778, 21439893, 21439965, 21439991, 21440056, 21440120, 21440340, 21445765, 21754543, 21802000, 22152171, 22152195, 22152211, 22152234, 22158176, 22596452, 22787168, 22787189, 22787248, 22788064, 22788102, 22788134, 22788972, 22920072, 22960388, 22960435, 22969230, 22971409, 23153735, 23153742, 23155792, 23156134, 23306097, 23532796, 23727705, 23922939, 24015579, 24294377, 24294400, 24346755, 24396804, 24419811, 24419822, 24440014, 24659699, 24686580, 24713330, 24785057, 24791472, 24814192, 24839406, 24841520, 24903431, 24903441, 24903474, 25158998, 25162389, 25317304, 25535467, 25545089, 25695001, 25740034, 25741198, 25923196, 25926517, 25974222, 25977812, 26013203, 26014536, 26017478, 26417031, 26419811, 26421972, 26673760, 26774629, 26777410, 26777502, 26945832, 27133214, 27171403, 27245855, 27312415, 27471379, 27474371, 27477255, 27494652, 27848918, 27848921, 27848937, 27849961, 27858062, 27860496, 27902303, 27902388, 27902398, 27902406, 28275809, 28277195, 28277486, 28492363, 28664212, 28671909, 28672001, 29099749, 29100347, 29100449, 29100543, 29345958, 29532089, 29532111, 29532138, 29939404, 29957963, 29959768, 29959897, 29959911, 30392263, 30393548, 30393653, 30649735, 30847685, 30847733, 30847746, 30847779, 31314849, 31314931, 31314966, 31532496, 31839203, 31839260, 31839337, 31839411, 32199868, 32353654, 32355759, 32355966, 32356064, 32858586, 32858662, 32858699, 32858741, 33382537, 33382711, 33383241, 33683368, 33732371, 33866728, 33866846, 33867016, 33867401, 33879504, 34223662, 34247537, 34398653, 34398938, 34399318, 34399428, 34870758, 34898883, 34901961, 35293856, 35366155, 35366215, 35682284, 35683911, 35684857, 35809502, 36042596, 36042821, 36105781, 36107470, 36431591, 36568384, 36568418, 36568603, 36784258, 36913594, 36913598, 36913601, 37347081, 37347098, 37347141, 37694889, 37694914, 37816777, 37821008, 37821473, 37821996, 38326803, 38327125, 38861951, 39258329, 39258389, 40493542, 40493590, 40493658, 40504724, 40811356, 40892405, 40892781, 41457484, 41457719, 41855117, 41855400, 41856126, 42067245, 42200159, 42200852, 42201538, 42321801, 42845609, 42845684, 42845853, 42845896, 42847923, 43245080, 43245104, 43245530, 43567614, 43708943, 43708954, 44084783, 44115185, 44115926, 44116233, 44561343, 44561400, 44561450, 45094376, 45177979, 45201977, 45513203, 45513247, 45754061, 45941397, 45941451, 46132907, 46360821, 46360870, 46360920, 46362414, 46846024, 46846074, 46846115, 46846246, 47262108, 47262951, 47597760, 47597835, 47871597, 47871615, 47871635, 47871646, 48159648, 48159731, 48159815, 48395736, 48596305, 48596324, 48596336, 48847374, 49052638, 49052686, 49052716, 49059364, 49491716, 49491736, 49491781, 49491808, 49929724, 49929746, 49929767, 49929776, 50454041, 50454086, 50937815, 50938746, 50938765, 50938773, 51302649, 51346271, 51346336, 51346471, 51347716, 51757126, 51757158, 51757162, 51760061, 52180858, 52180863, 52180871, 52180878, 52625728, 52625733, 52625744, 52627419, 52938493, 53130850, 53130867, 53130887, 53130896, 53623248, 53623295, 53623322, 53623350, 53917288, 54130537, 54130543, 54130552, 54130559, 54694311, 54694324, 54694329, 54694334, 55028088, 55192815, 55194474, 55301897, 55302141, 55302225, 55642223, 55917409, 55917420, 55917429, 55917432, 56561570, 56561579, 56561593, 56561607, 57229313, 57229337, 57229357, 57229371, 57902859, 57902997, 57983479, 57983532, 57983650, 58364871, 58574416, 58574431, 58574445, 58574452, 58880579, 59175769, 59175777, 59190534, 59190543, 59805584, 59806354, 59848474, 59848509, 60357959, 60357972, 60357982, 60357989, 60678464, 60791062, 60888200, 60888225, 60888284, 60888308, 61459592, 61459678, 61459706, 61459718, 61916108, 61916132, 61916137, 61963621, 62350846, 62350856, 62350867, 62350883, 62803165, 62803173, 62803186, 62809243, 62827106, 62827121, 63253676, 63253701, 63253706, 63253718, 63721700, 63721711, 63721724, 63721732, 64160538, 64160547, 64220933, 64220952, 64372659, 64372667, 64447616, 64647631, 64647651, 64647666, 64735604, 64869906, 64869947, 64870000, 64870021, 65079090, 65079094, 65082246, 65082275, 65469817, 65469882, 65469908, 65545955, 65545971, 65546284, 65554735, 65868656, 65954788, 65969704, 65969749, 65969758, 65979823, 66416579, 66416590, 66416602, 66416616, 66426103, 66426498, 66823631, 66823689, 66896542, 66896565, 66896601, 66896638, 67319385, 67319408, 67319425, 67494312, 67747860, 67747884, 67747912, 67755182, 67755192, 67755215, 67798397, 67998086, 68233678, 68354832, 68354853, 68478587, 68539623, 68603151, 68603324, 68848741, 69209924, 69210321, 69210407, 69499437, 69499452, 69567827, 69567879, 69947367, 69947379, 69964719, 70032387, 70353298, 70476425, 70476435, 70476446, 70476451, 71037028, 71037056, 71037076, 71037101, 71422327, 71422340, 71422361, 71597027, 71597048, 71597060, 71597072, 72069827, 72069855, 72069888, 72318993, 72644603, 72644629, 72644644, 72713855, 73232786, 73232803, 73232825, 73265108, 73799243, 73799348, 73829193, 73829202, 73829214, 73888479, 74385386, 74385399, 74385418, 74385438, 74904387, 74904396, 74904413, 74972442, 75550883, 75550907, 75550928, 75556791, 75906930, 75906942, 75906973, 75941738, 76170471, 76170515, 76170545, 76262706, 76596269, 76596299, 76768897, 77443436, 77443461, 77443491, 77443704, 78005009, 78005022, 78005082, 78026639, 78367424, 78665196, 78665204, 78665215, 78730532, 79446395, 79446433, 79446454, 79446473, 79736563, 79736586, 80576913, 80576928, 80576952, 80576967, 80597060, 80661504, 81154592, 81155006, 81330766, 81847365, 81847533, 81847570, 81847637, 82357079, 82357101, 82357123, 82358339, 82707568, 82707577, 82711866, 82711870, 83021197, 83021217, 83021236, 83021250, 83704154, 83704165, 83704169, 83704179, 83704190, 84012460, 84417104, 84417281, 84418938, 84419543, 85145626, 85145662, 85145680, 85145730, 85145757, 85150452, 85150872, 85150978, 85754656, 85879435, 85879447, 85879456, 85879465, 86492467, 86492583, 86494893, 86494914, 86692539, 86903805, 87361508, 87361662, 87361806, 87361995, 88143060, 88143074, 88143093, 88143166, 88146486, 88146497, 88146505, 88885268, 88885481, 88885497, 88885506, 88885524, 88885539, 89203876, 89203895, 89390416, 89390459, 89487903, 89487934, 89488524, 89491407, 90211299, 90220371, 90220438, 90242059, 90718350, 90718505, 90718618, 90718686, 91294485, 91360028, 91360052, 91360081, 91360104, 91450692, 91517984, 91518057, 91658290, 92142799, 92142829, 92142841, 92142950, 92627975, 92627988, 92628074, 92628079, 93136666, 93136674, 93136746, 93136802, 93528414, 93536785, 93536827, 93536844, 93536867, 93667422, 93709266, 93722443, 93722515, 93725362, 93746675, 94119269, 94233286, 94233344, 94233367, 94233391, 94333296, 94794774, 94794833, 94794847, 95258660, 95354259, 95354268, 95354288, 95354304, 95484098, 95484354, 95951270, 95951291, 95951330, 95951359, 96092647, 96095042, 96493688, 96501417, 96501454, 96669682, 96669687, 96669697, 96669943, 97161222, 97161241, 97161262, 97161295, 97311482, 97712291, 97756645, 97885289, 97885508, 97885552, 97885572, 97886188, 97932897, 98219158, 98253569, 98253592, 98253626, 98253651, 98341183, 98346415, 98411325, 98411393, 98411436, 98970218, 99033296, 99119158, 99119198, 99119240, 99119261, 99130630, 99174250, 99199463, 99206951, 99206970, 99254164, 99254203, 99254241, 99254358, 99254437, 99610601, 99641902, 99797327, 99797357, 99797381, 99797403, 100469994, 100472063, 100472084, 101078326, 101078350, 101078524, 101078559, 101078911, 101078953, 101079008, 101106419, 101106464, 101110605, 101191388, 101715440, 101734094, 101854599, 101854660, 102705386, 102705402, 102705430, 102705454, 103234296, 103234612, 103235041, 103338520, 103358098, 103359953, 104642522, 104642550, 104642566, 104642700, 105179506, 105189286, 105189783, 105289761, 105351503, 105351545, 105351572, 105351720, 105351748, 105430216, 106064277, 106064315, 106064447, 106064469, 106701564, 106701619, 106701659, 106701702, 107458429, 107458461, 107458483, 107458531, 108148416, 108148449, 108148479, 108149175, 108149201, 108153884, 108155504, 108158379, 108158439, 108234775, 108875151, 108875172, 108875216, 108875237, 108899214, 109364052, 109583771, 109583797, 109583822, 109583846, 110204666, 110335886, 110337782, 110337828, 110337853, 110337884, 110337910, 110702207, 110703943, 110704033, 110789105, 110892267, 111518891, 111876831, 112591865, 112591894, 112593662, 112593687, 113299556, 113299590, 113299620, 113299641, 113328094, 114020480, 114020505, 114020538, 114020557, 114491710, 114552541, 114687223, 114687236, 114687251, 114690870, 115377964, 116040770, 116040789, 116040807, 116040828, 116055112, 116693694, 116693715, 116693735, 116693764, 117498775, 117498793, 117498849, 117544573, 118281463, 118281490, 118281529, 118281609, 118650365, 119101539, 119101595, 119101643, 119917487, 119917513, 119917531, 119917556, 119934168, 120307951, 120749408, 120749452, 120749494, 120749528, 121121915, 121385193, 121385230, 121385262, 121385328, 121925044, 121946387, 122278149, 122278207, 122278276, 122278316, 122330194, 123042140, 123134886, 123134949, 123234510, 123234545, 123234626, 123234673, 124126528, 124126871, 124127383, 124128001, 124472052, 124908320, 124908832, 125013769, 125013799, 125013830, 125013849, 125859385, 125859450, 125859483, 126704033, 126710875, 126719093, 126719120, 126719148, 127506105, 127506257, 127506324, 127506364, 128160832, 128160929, 128162639, 128162713, 128209615, 128210518, 129457095, 129471121, 129471151, 129471170, 130112971, 130113061, 130113146, 130167063, 130925426, 131372632, 131592085, 132789698, 132870835, 133315268, 134109039, 134111541, 135472231, 135518721, 135949859, 135949881, 136170437, 136172718, 136213778, 138761013, 139308319, 139574344, 139577901, 139577956, 139577997, 139578061, 139578136, 139578207, 139578571, 139581823, 139586244, 139593916, 140490812, 140821168, 141759818, 142498104, 143517948, 143606297, 143606363, 143606407, 144510568, 144980658, 146026904, 146026928, 146026944, 146047188, 146047220, 146047247, 146057771, 146071355, 147143821, 147143848, 147143863, 147143881, 147937284, 147937377, 147937415, 147937443, 147948041, 148017553, 148521629, 148790984, 148791372, 148791414, 148791460, 148812192, 149222485, 149222558, 149411775, 149612167, 149612200, 149612243, 149638899, 150336333, 150336402, 150363993, 150366274, 150366320, 150366351, 150927798, 150980377, 150980409, 150980444, 150980471, 151291980, 151292047, 151311761, 151777652, 152173291, 152173304, 152173333, 152187131, 152187198, 152233094, 152233381, 152660131, 152660258, 152766031, 152822815, 152822847, 152823565, 152823669, 152824068, 152824174, 152832328, 152971952, 153025459, 153938986, 153939072, 153939226, 154727201, 154727251, 154727343, 154727487, 155414424, 155661985, 155662051, 155662087, 155696189, 156467855, 156467926, 156467963, 156467990, 157205782, 157205818, 157205831, 157205837, 158069071, 158069110, 158069143, 158069180, 159199204, 159199218, 159199229, 159199263, 159229806, 159913543, 160189476, 160189629, 160189720, 160189871, 160198008, 160198363, 160198658, 160199141, 161075864, 161208517, 161211085, 161216321, 161219921, 161219985, 161220552, 161230469, 161282711, 162857268, 162857316, 162857357, 162857391, 162857422, 162979146, 162979250, 163323379, 163348575, 163348758, 163348987, 163350265, 163351579, 163351966, 163352376, 163353363, 163354553, 163355211, 163355404, 163355764, 163488515, 163995329, 163995460, 164015715, 164016477, 164017027, 164174293, 164174394, 164207580, 164207842, 164369961, 168140516, 168140813, 168140949, 168141301, 168141496, 168142114, 168142394, 168142620, 168142869, 168143042, 169602010, 169602103, 169602388, 169669671, 170896461, 170896571, 170896941, 170897263, 170902990, 170903216, 170903610, 170903868, 172246669, 172246820, 172248941, 172249239, 172289170, 172298750, 172921991, 172922026, 172922089, 173751087, 173755801, 173781053, 173812248, 174418144, 174752186, 174752245, 174752400, 174752553, 176087466, 176087505, 176087556, 176087597, 176087639, 176087640, 176219131, 178076749, 178076831, 178076989, 178077177, 178400986, 179369406, 179369627, 179369752, 179369914, 179625551, 180298135, 180298414, 180298769, 180300142, 180313580, 180518956, 181196009, 181245094, 181245120, 181245141, 181245172, 181245219, 181355844, 181356054, 181469197, 181469279, 181550181, 182273799, 182273893, 182273948, 183346956, 183347165, 183355732, 183355817, 183355892, 183355969, 183441634, 183665171, 183665514, 183665594, 183665698, 183704866, 183797762, 183826384, 184757813, 184757948, 184758255, 184758713, 184760397, 185422055, 185422295, 185422758, 186521342, 186867645, 186867671, 186867693, 186868641, 186868758, 186958653, 186959114, 187688069, 187840979, 188643628, 188644205, 188644771, 188853857, 188854357, 188868661, 189756588, 189910262, 189910707, 189910805, 190094159, 190094270, 190094313, 190111117, 190880295, 191261808, 191261930, 192456288, 192537346, 193705415, 193743245, 193769809, 193771176, 193772607, 201756020, 201756469, 202039834, 202083069, 204095612, 204095670, 204095724, 204485737, 206136361, 206136532, 206566653, 206798405, 206799274, 208659586, 208659734, 209290837, 209980135, 209980247, 211944997, 212296400, 212296936, 212500257, 212641536, 215354986, 215355157, 215355320, 215392741, 215448210, 217901450, 218631022, 218631128, 218631227, 218634097, 220288951, 220288991, 220289039, 221173389, 221173959, 221181437, 221241923, 221266538, 223132403, 223132588, 223439643, 223785065, 223785350, 223785473, 223800426, 225921000, 225921137, 225921650, 225921724, 226205948, 226206253, 226206426, 226206639, 228588531, 228588651, 228588772, 228589017, 229909386, 229909697, 230185510, 230516405, 230729032, 230758501, 230758639, 232520546, 232522034, 233519998, 233520157, 233520257, 233520425, 233633874, 233657188, 233660801, 236401511, 236402747, 236403380, 236403905, 236438668, 236440696, 236441643, 236442380, 236443047, 241017426, 241017568, 241511828, 241512134, 241542047, 243007180, 243777016, 243778818, 243788010, 243788599, 243790334, 243790517, 243791145, 243791329, 243890860, 244081145, 244082303, 245617341, 248285248, 248287898, 250407413, 250407647, 250533235, 250534394, 252564167, 253485047, 253518869, 253518920, 253519495, 254608905, 255800146, 255800577, 255800783, 257342981, 257343434, 257343597, 257807125, 257807712, 257810065, 257811449, 257812862, 257813288, 257816690, 257829534, 257837994, 257838919, 257840933, 261439002, 261447208, 261762082, 261826406, 261826521, 261826683, 261827192, 262406180, 264289990, 264290413, 264989911, 264990158, 264990548, 264991177, 268533320, 268533563, 268533852, 268586231, 270560835, 270562881, 271017031, 271017217, 271017537, 271017937, 273795078, 273969902, 273970482, 277954704, 277955084, 277955605, 277956390, 277963405, 278009025, 280661926, 280662667, 280662903, 283754518, 283755431, 283756680, 284135286, 286526176, 286526788, 286527185, 286527303, 287424278, 287424705, 287425246, 287426148, 292044716, 292046825, 292969139, 292969458, 292969932, 292970740, 292971046, 294950095, 295460073, 295460702, 295461517, 298085284, 298087401, 300410436, 300410799, 300436644, 302030998, 302063713, 302280931, 302281291, 302418416, 302502491, 304719869, 304720206, 304720496, 304721834, 305943571, 306163602, 306971294, 306971449, 306971659, 313532084, 313532207, 313532292, 313536525, 313547087, 313547345, 314534854, 315565799, 315573586, 315574690, 315617026, 317592936, 317593132, 317593302, 319106687, 319655993, 319656339, 319656563, 321345839, 321582427, 323192649, 323477973, 325755895, 325758098, 327365543, 329021694, 329021959, 329022047, 330295904, 330296114, 330296266, 332747438, 332747874, 332748371, 332755212, 332774000, 334177905, 334523653, 334620158, 334620353, 334620605, 335085355, 335086410, 335087161, 335132838, 336370943, 336371164, 341108783, 341109697, 341110180, 342869414, 343586214, 343587237, 346685995, 346686597, 346686979, 346687267, 346687565, 346687946, 356212121, 356212933, 356213216, 356213494, 357834584, 357837444, 359178822, 359179120, 359179463, 359244394, 361950297, 361950795, 365631067, 365642085, 365642352, 365674685, 368070589, 375829909, 375832969, 379098145, 380204314, 380210977, 382837475, 382837631, 382837706, 382837862, 382837983, 383608755, 383609201, 385780758, 387285940, 387286257, 390969719, 391005275, 392057539, 395205750, 395205954, 395449601, 397902579, 398122525, 398122724, 398122908, 398675172, 398675588, 401277404, 402304782, 402305186, 405991634, 405996670, 406101128, 409745306, 409746054, 410001793, 413199938, 413200176, 416846710, 419240423, 419241111, 420160506, 420161128, 420178043, 424700938, 425120575, 425121415, 427947884, 427948872, 427949130, 430065768, 430066424, 431038614, 431042935, 431044405, 431045523, 431047232, 433922317, 433923430, 434289516, 435116454, 435116927, 439307591, 439988813, 439989184, 444457864, 445150567, 445151478, 450565762, 450566409, 454733534, 454733927, 454734258, 456221232, 456226536, 460099901, 461488745, 461489128, 462294549, 467109039, 467109371, 467137230, 467138029, 467859890, 467895641, 467935723, 471751406, 471830826, 472607336, 472607575, 473287763, 477910063, 477911027, 478707595, 483308034, 483308681, 483899693, 489196923, 489197999, 491599826, 492670565, 492854717, 492979024, 498752334, 498752764, 501753915, 501755654, 501939119, 501940219, 501941714, 501942750, 501966315, 503955938, 503957396, 503957703, 507797529, 507803661, 511930668, 511931885, 512422543, 512451831, 515687734, 515687925, 515688182, 515688387, 515688568, 517827255, 517827962, 521925833, 522586178, 522587921, 527383094, 527384527, 531702150, 532254782, 535104095, 536288166, 537374622, 537435862, 537436189, 537436448, 542184488, 542755101, 548019247, 549914420, 549914888, 549915884, 553937189, 553939167, 561842836, 563287969, 563288952, 566780253, 566780416, 569676258, 569678090, 579868200, 583007360, 583026228, 583030187, 583157224, 583159170, 602145262, 602146440, 608818868, 610133129, 610133821, 621089209, 621090617, 629893424, 629895007, 635616686, 635636907, 638034686, 639343572, 639345143, 658805662, 674103772, 674104921, 675312894, 686806111, 698862470, 709229848, 709399046, 709400407, 718234275, 718245473, 718258183, 718259118, 725802037, 725802546, 728205177, 728207067, 738924664, 738925737, 743687369, 743691009, 743692189, 743692715, 746686384, 746687364, 754869699, 754871615, 782684707, 790967234, 790968060, 790968791, 790979662, 815545408, 820013867, 834681176, 834681446, 835779898, 835780770, 845518976, 845527166, 846792499, 846794018, 858740936, 869123788, 869125445, 880432781, 880433057, 880448457, 880453518, 880499904, 880506541, 891900286, 891924036, 892001727, 892003497, 903197575, 903199054, 904534058, 904534702, 928794651, 928796097, 928805891, 928806888, 928807470, 928913996, 928914739, 936703279, 936703828, 936704694, 939131179, 939132399, 939160890, 945527020, 953518028, 968188707, 972187699, 972189904, 987005222, 987030948, 987032734, 999861927, 999864256, 999864737, 999865627, 999866081, 999866560, 1001541309, 1001649855, 1001653705, 1016183873, 1016496274, 1030943683, 1033136271, 1033137155, 1046322934, 1046323916, 1047877698, 1047878121, 1060280135, 1060282245, 1062304136, 1074738432, 1074742019, 1076255449, 1076457286, 1076467071, 1084980039, 1088051376, 1088051790, 1102656209, 1103011681, 1103012605, 1117743696, 1117745433, 1119904760, 1119905177, 1119905579, 1119906090, 1132884456, 1132887630, 1144705079, 1144845319, 1145081326, 1145358304, 1145358579, 1149193097, 1149193369, 1149573271, 1149579825, 1178843200, 1180417820, 1180418251, 1183006601, 1183007014, 1183007628, 1183008259, 1191128759, 1191143111, 1191149773, 1208300505, 1208300973, 1213388821, 1213389922, 1215506016, 1215515248, 1224414225, 1227732454, 1230024287, 1230027322, 1230839551, 1241156565, 1241156683, 1241585055, 1241585476, 1241586091, 1241586595, 1241587075, 1245307956, 1245309147, 1258015236, 1258015943, 1304339797, 1304344132, 1320966419, 1320966824, 1340206298, 1340206957, 1360077860, 1360078533, 1363010936, 1363011928, 1363019628, 1363020083, 1363023036, 1377984056, 1377987605, 1380774367, 1380788230, 1402292509, 1402322831, 1402445648, 1402446243, 1402452608, 1427401206, 1427402900, 1466341532, 1466353882, 1469849512, 1469850646, 1469987740, 1492225511, 1492226137, 1504917437, 1513260464, 1513262045, 1532311127, 1536052210, 1536053426, 1560398824, 1560400932, 1560600467, 1560608167, 1587165780, 1587175338, 1602503043, 1609498185, 1645052196, 1645056094, 1665509807, 1665540132, 1665541125, 1665544157, 1678314358, 1678349400, 1694623317, 1694661592, 1708354246, 1708355542, 1748600996, 1748602670, 1748603889, 1748604797, 1760404984, 1760406591, 1789546750, 1789547756, 1829078563, 1829110586, 1856115349, 1856117810, 1868161479, 1868405032, 1886281601, 1903663829, 1903666770, 1915020448, 1929592959, 1929597345, 1981809272, 1981813154, 1990279115, 2002056831, 2008153361, 2008153855, 2008154280, 2008155070, 2010630652, 2014805757, 2014853976, 2016188435, 2016189421, 2045764727, 2045767145, 2103274863, 2103276507, 2136389582, 2136391608, 2136411578, 2136443074, 2163549594, 2163551089, 2190016098, 2190019650, 2221406451, 2221408043, 2221409781, 2222652960, 2226815033, 2230347432, 2230348478, 2261167878, 2261478942, 2274759555, 2290921705, 2291005315, 2316759705, 2316760298, 2350122208, 2385189785, 2385192846, 2409286506, 2409287383, 2413687523, 2413755690, 2435999037, 2435999675, 2436000243, 2445084910, 2445089071, 2463674178, 2463675080, 2463683230, 2463693263, 2470915740, 2470977704, 2470982537, 2470984833, 2506347092, 2506365260, 2530753967, 2535102249, 2535102910, 2535464538, 2535472650, 2535479252, 2544539043, 2544539559, 2544549379, 2544748094, 2548989639, 2548992615, 2548993638, 2549005282, 2568113462, 2569022418, 2569028708, 2588272910, 2605965785, 2605966484, 2620420065, 2620441860, 2620451289, 2620452349, 2620470482, 2620521684, 2620523077, 2620523875, 2620524562, 2646379006, 2646396550, 2649068009, 2713323785, 2804667002, 2830533679}
		if request and request:IsA("RemoteFunction") then
			for _, id in ipairs(allids) do
				task.spawn(function()
					task.wait(0.1)
					request:InvokeServer(";gear me " .. id)
				end)
			end
		end
	end)
	
end;
task.spawn(C_39);
-- StarterGui.HDPanel.Panel.Frame.misc.clone.toggle.LocalScript
local function C_3f()
local script = G2L["3f"];
	script.Parent.Activated:Connect(function()
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Doge army",
			Text = "Spawning doges (doesnt kill)",
			Icon = "rbxassetid://76993908008305"
		})
	 
		local api = game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminHDClient") or game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminClient")
		local Signals = api and api:FindFirstChild("Signals")
		local request = Signals and Signals:FindFirstChild("RequestCommandSilent") or Signals and Signals:FindFirstChild("RequestCommand")
		if request and request:IsA("RemoteFunction") then
			for i = 1, 25 do
				request:InvokeServer(";insert 257489726")
			end
		end
	end)
	
end;
task.spawn(C_3f);
-- StarterGui.HDPanel.Panel.Frame.misc.meteorz.toggle.LocalScript
local function C_45()
local script = G2L["45"];
	script.Parent.Activated:Connect(function()
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "METEORS",
			Text = "Spawning meteors (may kill)",
			Icon = "rbxassetid://76993908008305"
		})
	
		local api = game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminHDClient") or game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminClient")
		local Signals = api and api:FindFirstChild("Signals")
		local request = Signals and Signals:FindFirstChild("RequestCommandSilent") or Signals and Signals:FindFirstChild("RequestCommand")
		if request and request:IsA("RemoteFunction") then
			for i = 1, 25 do
				request:InvokeServer(";insert 86374494")
				request:InvokeServer(";insert 12221636")
			end
		end
	end)
	
end;
task.spawn(C_45);
-- StarterGui.HDPanel.Panel.Frame.misc.goner.toggle.LocalScript
local function C_4a()
local script = G2L["4a"];
	script.Parent.Activated:Connect(function()
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Goner command",
			Text = "You are goner.",
			Icon = "rbxassetid://76993908008305"
		})
	
		local api = game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminHDClient") or game:GetService("ReplicatedStorage"):FindFirstChild("HDAdminClient")
		local Signals = api and api:FindFirstChild("Signals")
		local request = Signals and Signals:FindFirstChild("RequestCommandSilent") or Signals and Signals:FindFirstChild("RequestCommand")
		if request and request:IsA("RemoteFunction") then
			local gonerchar = 8014430222
			request:InvokeServer(";r6 me")
			request:InvokeServer(";speed me 10")
			task.wait(1)
			request:InvokeServer(";char me " .. gonerchar)
			request:InvokeServer(";titler me [Goner]")
	
			local player = game.Players.LocalPlayer
			local char = player.Character or player.CharacterAdded:Wait()
			local hrp = char:FindFirstChild("HumanoidRootPart")
			if hrp then
				local debounce = false
				hrp.Touched:Connect(function(hit)
					if debounce then return end
					local humanoid = hit.Parent and hit.Parent:FindFirstChildOfClass("Humanoid")
					if humanoid then
						local playertokill = game.Players:GetPlayerFromCharacter(hit.Parent)
						if playertokill then
							debounce = true
							request:InvokeServer(";kill " .. playertokill.Name)
							task.wait(1)
							debounce = false
						end
					end
				end)
			end
		end
	end)
	
end;
task.spawn(C_4a);
-- StarterGui.HDPanel.Panel.Frame.page2.LocalScript
local function C_4e()
local script = G2L["4e"];
	local page2 = script.Parent
	local misc = page2.Parent.misc
	local antis = page2.Parent.antis
	local page1 = script.Parent.Parent.page1
	page2.Activated:Connect(function()
		misc.Visible = true
		antis.Visible = false
		page2.Visible = false
		page1.Visible = true
	end)
end;
task.spawn(C_4e);
-- StarterGui.HDPanel.Panel.Frame.page1.LocalScript
local function C_51()
local script = G2L["51"];
	local page1 = script.Parent
	local misc = page1.Parent.misc
	local antis = page1.Parent.antis
	local page2 = script.Parent.Parent.page2
	page1.Activated:Connect(function()
		misc.Visible = false
		antis.Visible = true
		page2.Visible = true
		page1.Visible = false
	end)
end;
task.spawn(C_51);
-- StarterGui.HDPanel.toggle.b.LocalScript
local function C_64()
local script = G2L["64"];
	local b = script.Parent
	local frame = b.Parent.Parent.Panel
	local toggled = false
	ts = game:GetService("TweenService")
	ti = TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
	b.Activated:Connect(function()
		if toggled == false then
			toggled = true
			local t = ts:Create(frame, ti, {GroupTransparency = 0})
			t:Play()
			frame.Visible = true
		else
			toggled = false
			local t2 = ts:Create(frame, ti, {GroupTransparency = 1})
			t2:Play()
			t2.Completed:Connect(function()
				frame.Visible = false
			end)
		end
	end)
end;
task.spawn(C_64);

return G2L["1"], require;
