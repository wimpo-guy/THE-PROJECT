--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 40 | Scripts: 16 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.f3xmain
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[f3xmain]];
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.f3xmain.Frame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["Active"] = true;
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Size"] = UDim2.new(0.40596, 0, 0.42786, 0);
G2L["2"]["Position"] = UDim2.new(0.08288, 0, 0.39055, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.f3xmain.Frame.top
G2L["3"] = Instance.new("Frame", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Size"] = UDim2.new(1, 0, 0.12438, 0);
G2L["3"]["Position"] = UDim2.new(0, 0, 0, 0);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Name"] = [[top]];


-- StarterGui.f3xmain.Frame.top.UIStroke
G2L["4"] = Instance.new("UIStroke", G2L["3"]);
G2L["4"]["Thickness"] = 7;
G2L["4"]["Color"] = Color3.fromRGB(255, 0, 0);


-- StarterGui.f3xmain.Frame.top.TextLabel
G2L["5"] = Instance.new("TextLabel", G2L["3"]);
G2L["5"]["TextWrapped"] = true;
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["TextSize"] = 14;
G2L["5"]["TextScaled"] = true;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["5"]["Size"] = UDim2.new(1, 0, -0.95646, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Text"] = [[script made by: bedman or NDLgen]];
G2L["5"]["Position"] = UDim2.new(0, 0, 1, 0);


-- StarterGui.f3xmain.Frame.UIStroke
G2L["6"] = Instance.new("UIStroke", G2L["2"]);
G2L["6"]["Thickness"] = 2;
G2L["6"]["Color"] = Color3.fromRGB(255, 0, 0);


-- StarterGui.f3xmain.Frame.bottom
G2L["7"] = Instance.new("Frame", G2L["2"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Size"] = UDim2.new(1, 0, 0.12438, 0);
G2L["7"]["Position"] = UDim2.new(0, 0, 0.97887, 0);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Name"] = [[bottom]];


-- StarterGui.f3xmain.Frame.bottom.UIStroke
G2L["8"] = Instance.new("UIStroke", G2L["7"]);
G2L["8"]["Thickness"] = 7;
G2L["8"]["Color"] = Color3.fromRGB(255, 0, 0);


-- StarterGui.f3xmain.Frame.bottom.TextButton
G2L["9"] = Instance.new("TextButton", G2L["7"]);
G2L["9"]["TextWrapped"] = true;
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["9"]["TextSize"] = 14;
G2L["9"]["TextScaled"] = true;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["9"]["Size"] = UDim2.new(1, 0, -0.93782, 0);
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Text"] = [[Give f3x (only if your admin rank in hd admin games )]];
G2L["9"]["Position"] = UDim2.new(-0, 0, 1.00001, 0);


-- StarterGui.f3xmain.Frame.bottom.TextButton.LocalScript
G2L["a"] = Instance.new("LocalScript", G2L["9"]);



-- StarterGui.f3xmain.Frame.main
G2L["b"] = Instance.new("Frame", G2L["2"]);
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(23, 0, 0);
G2L["b"]["Size"] = UDim2.new(0.9636, 0, 0.74058, 0);
G2L["b"]["Position"] = UDim2.new(0.01733, 0, 0.1831, 0);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Name"] = [[main]];


-- StarterGui.f3xmain.Frame.main.color
G2L["c"] = Instance.new("TextButton", G2L["b"]);
G2L["c"]["TextWrapped"] = true;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["c"]["TextSize"] = 14;
G2L["c"]["TextScaled"] = true;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c"]["Size"] = UDim2.new(0.14851, 0, -0.1961, 0);
G2L["c"]["Name"] = [[color]];
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Text"] = [[Color all]];
G2L["c"]["Position"] = UDim2.new(0.65333, 0, 0.24676, 0);


-- StarterGui.f3xmain.Frame.main.color.LocalScript
G2L["d"] = Instance.new("LocalScript", G2L["c"]);



-- StarterGui.f3xmain.Frame.main.decal
G2L["e"] = Instance.new("TextButton", G2L["b"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextScaled"] = true;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["e"]["Size"] = UDim2.new(0.14851, 0, -0.18659, 0);
G2L["e"]["Name"] = [[decal]];
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[Decal spam]];
G2L["e"]["Position"] = UDim2.new(0.23875, 0, 0.24676, 0);


-- StarterGui.f3xmain.Frame.main.decal.LocalScript
G2L["f"] = Instance.new("LocalScript", G2L["e"]);



-- StarterGui.f3xmain.Frame.main.fire
G2L["10"] = Instance.new("TextButton", G2L["b"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["10"]["TextSize"] = 14;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["10"]["Size"] = UDim2.new(0.14851, 0, -0.20085, 0);
G2L["10"]["Name"] = [[fire]];
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Text"] = [[Fire all]];
G2L["10"]["Position"] = UDim2.new(0.45246, 0, 0.24676, 0);


-- StarterGui.f3xmain.Frame.main.fire.LocalScript
G2L["11"] = Instance.new("LocalScript", G2L["10"]);



-- StarterGui.f3xmain.Frame.main.sky
G2L["12"] = Instance.new("TextButton", G2L["b"]);
G2L["12"]["TextWrapped"] = true;
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["12"]["TextSize"] = 14;
G2L["12"]["TextScaled"] = true;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["12"]["Size"] = UDim2.new(0.14851, 0, -0.18659, 0);
G2L["12"]["Name"] = [[sky]];
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Text"] = [[Sky]];
G2L["12"]["Position"] = UDim2.new(0.02228, 0, 0.24676, 0);


-- StarterGui.f3xmain.Frame.main.sky.LocalScript
G2L["13"] = Instance.new("LocalScript", G2L["12"]);



-- StarterGui.f3xmain.Frame.main.unanchor
G2L["14"] = Instance.new("TextButton", G2L["b"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["14"]["Size"] = UDim2.new(0.14851, 0, -0.1961, 0);
G2L["14"]["Name"] = [[unanchor]];
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[Unanchor all]];
G2L["14"]["Position"] = UDim2.new(0.828, 0, 0.24201, 0);


-- StarterGui.f3xmain.Frame.main.unanchor.LocalScript
G2L["15"] = Instance.new("LocalScript", G2L["14"]);



-- StarterGui.f3xmain.Frame.main.rotate
G2L["16"] = Instance.new("TextButton", G2L["b"]);
G2L["16"]["TextWrapped"] = true;
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["16"]["TextSize"] = 14;
G2L["16"]["TextScaled"] = true;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["16"]["Size"] = UDim2.new(0.14851, 0, -0.1961, 0);
G2L["16"]["Name"] = [[rotate]];
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Text"] = [[Rotate all]];
G2L["16"]["Position"] = UDim2.new(0.02079, 0, 0.52253, 0);


-- StarterGui.f3xmain.Frame.main.rotate.LocalScript
G2L["17"] = Instance.new("LocalScript", G2L["16"]);



-- StarterGui.f3xmain.Frame.main.mesh
G2L["18"] = Instance.new("TextButton", G2L["b"]);
G2L["18"]["TextWrapped"] = true;
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["18"]["TextSize"] = 14;
G2L["18"]["TextScaled"] = true;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["18"]["Size"] = UDim2.new(0.14851, 0, -0.1961, 0);
G2L["18"]["Name"] = [[mesh]];
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Text"] = [[Random Mesh all]];
G2L["18"]["Position"] = UDim2.new(0.23673, 0, 0.52253, 0);


-- StarterGui.f3xmain.Frame.main.mesh.LocalScript
G2L["19"] = Instance.new("LocalScript", G2L["18"]);



-- StarterGui.f3xmain.Frame.main.hd
G2L["1a"] = Instance.new("TextButton", G2L["b"]);
G2L["1a"]["TextWrapped"] = true;
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["1a"]["TextSize"] = 14;
G2L["1a"]["TextScaled"] = true;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1a"]["Size"] = UDim2.new(0.52641, 0, -0.1961, 0);
G2L["1a"]["Name"] = [[hd]];
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Text"] = [[HDAdminWorkspaceFolder ( ONLY IN HD ADMIN GAMES IF YOUR ATLEAST ADMIN RANK )]];
G2L["1a"]["Position"] = UDim2.new(0.4501, 0, 0.52253, 0);


-- StarterGui.f3xmain.Frame.main.hd.LocalScript
G2L["1b"] = Instance.new("LocalScript", G2L["1a"]);



-- StarterGui.f3xmain.Frame.main.neon
G2L["1c"] = Instance.new("TextButton", G2L["b"]);
G2L["1c"]["TextWrapped"] = true;
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["1c"]["TextSize"] = 14;
G2L["1c"]["TextScaled"] = true;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1c"]["Size"] = UDim2.new(0.14851, 0, -0.18659, 0);
G2L["1c"]["Name"] = [[neon]];
G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Text"] = [[Neon all]];
G2L["1c"]["Position"] = UDim2.new(0.02023, 0, 0.79354, 0);


-- StarterGui.f3xmain.Frame.main.neon.LocalScript
G2L["1d"] = Instance.new("LocalScript", G2L["1c"]);



-- StarterGui.f3xmain.Frame.main.delete
G2L["1e"] = Instance.new("TextButton", G2L["b"]);
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextScaled"] = true;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1e"]["Size"] = UDim2.new(0.14851, 0, -0.1961, 0);
G2L["1e"]["Name"] = [[delete]];
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Text"] = [[Delete all]];
G2L["1e"]["Position"] = UDim2.new(0.23673, 0, 0.79354, 0);


-- StarterGui.f3xmain.Frame.main.delete.LocalScript
G2L["1f"] = Instance.new("LocalScript", G2L["1e"]);



-- StarterGui.f3xmain.Frame.main.trail
G2L["20"] = Instance.new("TextButton", G2L["b"]);
G2L["20"]["TextWrapped"] = true;
G2L["20"]["BorderSizePixel"] = 0;
G2L["20"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["20"]["TextSize"] = 14;
G2L["20"]["TextScaled"] = true;
G2L["20"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["20"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["20"]["Size"] = UDim2.new(0.14851, 0, -0.1961, 0);
G2L["20"]["Name"] = [[trail]];
G2L["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["20"]["Text"] = [[Trail]];
G2L["20"]["Position"] = UDim2.new(0.4501, 0, 0.79354, 0);


-- StarterGui.f3xmain.Frame.main.trail.LocalScript
G2L["21"] = Instance.new("LocalScript", G2L["20"]);



-- StarterGui.f3xmain.Frame.main.kill
G2L["22"] = Instance.new("TextButton", G2L["b"]);
G2L["22"]["TextWrapped"] = true;
G2L["22"]["BorderSizePixel"] = 0;
G2L["22"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["22"]["TextSize"] = 14;
G2L["22"]["TextScaled"] = true;
G2L["22"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["22"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["22"]["Size"] = UDim2.new(0.14851, 0, -0.1961, 0);
G2L["22"]["Name"] = [[kill]];
G2L["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22"]["Text"] = [[Kill all]];
G2L["22"]["Position"] = UDim2.new(0.65319, 0, 0.79354, 0);


-- StarterGui.f3xmain.Frame.main.kill.LocalScript
G2L["23"] = Instance.new("LocalScript", G2L["22"]);



-- StarterGui.f3xmain.Frame.main.sky2
G2L["24"] = Instance.new("TextButton", G2L["b"]);
G2L["24"]["TextWrapped"] = true;
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["24"]["TextSize"] = 14;
G2L["24"]["TextScaled"] = true;
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["24"]["Size"] = UDim2.new(0.14851, 0, -0.18659, 0);
G2L["24"]["Name"] = [[sky2]];
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Text"] = [[Sky2]];
G2L["24"]["Position"] = UDim2.new(0.82692, 0, 0.78403, 0);


-- StarterGui.f3xmain.Frame.main.sky2.LocalScript
G2L["25"] = Instance.new("LocalScript", G2L["24"]);



-- StarterGui.f3xmain.Frame.main.base
G2L["26"] = Instance.new("TextButton", G2L["b"]);
G2L["26"]["TextWrapped"] = true;
G2L["26"]["BorderSizePixel"] = 0;
G2L["26"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["26"]["TextSize"] = 14;
G2L["26"]["TextScaled"] = true;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(49, 0, 0);
G2L["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["26"]["Size"] = UDim2.new(0.95316, 0, -0.14734, 0);
G2L["26"]["Name"] = [[base]];
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Text"] = [[Create baseplate]];
G2L["26"]["Position"] = UDim2.new(0.02228, 0, 0.96459, 0);


-- StarterGui.f3xmain.Frame.main.base.LocalScript
G2L["27"] = Instance.new("LocalScript", G2L["26"]);



-- StarterGui.f3xmain.Frame.DragScript
G2L["28"] = Instance.new("LocalScript", G2L["2"]);
G2L["28"]["Name"] = [[DragScript]];


-- StarterGui.f3xmain.Frame.bottom.TextButton.LocalScript
local function C_a()
local script = G2L["a"];
	local b = script.Parent
	b.Activated:Connect(function()
		local args = {
			[1] = ";give me build"
		}
		game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
	end)
	
end;
task.spawn(C_a);
-- StarterGui.f3xmain.Frame.main.color.LocalScript
local function C_d()
local script = G2L["d"];
	local b = script.Parent
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	
	b.Activated:Connect(function()
		local partsToColor = {}
		local warned = false
	
		local function applyColorToPart(part)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = Color3.new(math.random(), math.random(), math.random()),
						["UnionColoring"] = true
					}
				}
			}
	
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			if buildingTools then
				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(args))
			elseif not warned then
				warn("Building tool not found")
				warned = true
			end
		end
	
		local function collectParts(workspaceObject)
			partsToColor = {}
	
			for _, obj in pairs(workspaceObject:GetDescendants()) do
				if obj:IsA("Part") or obj:IsA("MeshPart") then
					table.insert(partsToColor, obj)
				end
			end
		end
	
		collectParts(workspace)
	
		local isColoring = true
	
		RunService.Heartbeat:Connect(function(_, dt)
			if isColoring then
				for _, part in ipairs(partsToColor) do
					applyColorToPart(part)
				end
			end
		end)
	end)
	
end;
task.spawn(C_d);
-- StarterGui.f3xmain.Frame.main.decal.LocalScript
local function C_f()
local script = G2L["f"];
	local b = script.Parent
	local warned = false
	
	b.Activated:Connect(function()
		local textureId = "rbxassetid://17291005664"
	
		local function applyTextureToPart(part)
			local faces = {Enum.NormalId.Front, Enum.NormalId.Back, Enum.NormalId.Top, Enum.NormalId.Bottom, Enum.NormalId.Left, Enum.NormalId.Right}
	
			for _, face in ipairs(faces) do
				local args = {
					[1] = "CreateTextures",
					[2] = {
						[1] = {
							["Part"] = part,
							["Face"] = face,
							["TextureType"] = "Decal"
						}
					}
				}
	
				local buildingTools = nil
				local player = game:GetService("Players").LocalPlayer
	
				-- Search for the tool in Character and Backpack
				for _, item in pairs(player.Character:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
	
				if not buildingTools then
					for _, item in pairs(player.Backpack:GetChildren()) do
						if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
							buildingTools = item
							break
						end
					end
				end
				
				if buildingTools then
					buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(args))
				elseif not warned then
					warn("Building tool not found")
					warned = true
				end
	
				local argsSync = {
					[1] = "SyncTexture",
					[2] = {
						[1] = {
							["Part"] = part,
							["Face"] = face,
							["TextureType"] = "Decal",
							["Texture"] = textureId
						}
					}
				}
	
				if buildingTools then
					buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsSync))
				end
			end
		end
	
		local function applyTextureToAllParts(workspaceObject)
			for _, obj in pairs(workspaceObject:GetDescendants()) do
				if obj:IsA("Part") or obj:IsA("MeshPart") then
					applyTextureToPart(obj)
				end
			end
		end
	
		applyTextureToAllParts(workspace)
	end)
	
end;
task.spawn(C_f);
-- StarterGui.f3xmain.Frame.main.fire.LocalScript
local function C_11()
local script = G2L["11"];
	local b = script.Parent
	local warned = false
	
	b.Activated:Connect(function()
		local function applyDecorationToPart(part)
			local argsCreate = {
				[1] = "CreateDecorations",
				[2] = {
					[1] = {
						["Part"] = part,
						["DecorationType"] = "Fire"
					}
				}
			}
	
			local argsSync = {
				[1] = "SyncDecorate",
				[2] = {
					[1] = {
						["Part"] = part,
						["DecorationType"] = "Fire",
						["Size"] = 999
					}
				}
			}
	
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			-- Search for the tool in Character and Backpack
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			if buildingTools then
				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsCreate))
				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsSync))
			elseif not warned then
				warn("Building tool not found")
				warned = true
			end
		end
	
		local function applyDecorationToAllParts(workspaceObject)
			for _, obj in pairs(workspaceObject:GetDescendants()) do
				if obj:IsA("Part") or obj:IsA("MeshPart") then
					applyDecorationToPart(obj)
				end
			end
		end
	
		applyDecorationToAllParts(workspace)
	end)
	
end;
task.spawn(C_11);
-- StarterGui.f3xmain.Frame.main.sky.LocalScript
local function C_13()
local script = G2L["13"];
	local b = script.Parent
	imageOne = "http://www.roblox.com/asset/?id=169585459"
	imageTwo = "http://www.roblox.com/asset/?id=169585475"
	imageThree = "http://www.roblox.com/asset/?id=169585485"
	imageFour = "http://www.roblox.com/asset/?id=169585502"
	imageFive = "http://www.roblox.com/asset/?id=169585515"
	imageSix = "http://www.roblox.com/asset/?id=169585502"
	imageSeven = "http://www.roblox.com/asset/?id=169585485"
	imageEight = "http://www.roblox.com/asset/?id=169585475"
	
	local images = {imageOne, imageTwo, imageThree, imageFour, imageFive, imageSix, imageSeven, imageEight}
	
	local warned = false
	
	b.Activated:Connect(function()
		local function findBuildingTools()
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			return buildingTools
		end
	
		local buildingTools = findBuildingTools()
	
		if buildingTools then
			local syncAPI = buildingTools:FindFirstChild("SyncAPI")
			if syncAPI then
				local serverEndpoint = syncAPI:FindFirstChild("ServerEndpoint")
				if serverEndpoint then
					if workspace:FindFirstChild("sky") then
						local args = {
							[1] = "Remove",
							[2] = {
								[1] = workspace.sky
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
					else
						local args = {
							[1] = "CreatePart",
							[2] = "Normal",
							[3] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position) * CFrame.Angles(0, 0, 0),
							[4] = workspace
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SetName",
							[2] = {
								[1] = workspace.Part
							},
							[3] = "sky"
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncCollision",
							[2] = {
								[1] = {
									["Part"] = workspace.sky,
									["CanCollide"] = false
								}
							}
						}
						
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "CreateMeshes",
							[2] = {
								[1] = {
									["Part"] = workspace.sky
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncMesh",
							[2] = {
								[1] = {
									["MeshType"] = Enum.MeshType.FileMesh,
									["Part"] = workspace.sky
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncMesh",
							[2] = {
								[1] = {
									["Part"] = workspace.sky,
									["MeshId"] = "rbxassetid://8006679977"
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncMesh",
							[2] = {
								[1] = {
									["Part"] = workspace.sky,
									["Scale"] = Vector3.new(67, 67, 67)
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						while true do
							for _, image in ipairs(images) do
								local args = {
									[1] = "SyncMesh",
									[2] = {
										[1] = {
											["Part"] = workspace.sky,
											["TextureId"] = image
										}
									}
								}
								serverEndpoint:InvokeServer(unpack(args))
								wait(0.1)
							end
						end
					end
				end
			end
		end
	end)
	
end;
task.spawn(C_13);
-- StarterGui.f3xmain.Frame.main.unanchor.LocalScript
local function C_15()
local script = G2L["15"];
	local b = script.Parent
	b.Activated:Connect(function()
		local function unanchor(part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = false
					}
				}
			}
	
			local function findBuildingTools()
				local buildingTools = nil
				local player = game:GetService("Players").LocalPlayer
	
				for _, item in pairs(player.Character:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
	
				if not buildingTools then
					for _, item in pairs(player.Backpack:GetChildren()) do
						if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
							buildingTools = item
							break
						end
					end
				end
	
				return buildingTools
			end
	
			local buildingTools = findBuildingTools()
	
			if buildingTools then
				local syncAPI = buildingTools:FindFirstChild("SyncAPI")
				if syncAPI then
					local serverEndpoint = syncAPI:FindFirstChild("ServerEndpoint")
					if serverEndpoint then
						serverEndpoint:InvokeServer(unpack(args))
					end
				end
			end
		end
	
		local function unanchorAllParts(workspaceObject)
			for _, obj in pairs(workspaceObject:GetDescendants()) do
				if obj:IsA("Part") or obj:IsA("MeshPart") then
					unanchor(obj)
				end
			end
		end
	
		unanchorAllParts(workspace)
	end)
	
end;
task.spawn(C_15);
-- StarterGui.f3xmain.Frame.main.rotate.LocalScript
local function C_17()
local script = G2L["17"];
	local b = script.Parent
	local RunService = game:GetService("RunService")
	local localPlayer = game:GetService("Players").LocalPlayer
	local warned = false
	
	b.Activated:Connect(function()
		local partsToRotate = {}
	
		local function rotatePartSmoothly(part, targetRotation)
			local duration = 1
			local startRotation = part.CFrame
			local startTime = tick()
	
			local buildingTools = nil
	
			for _, item in pairs(localPlayer.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(localPlayer.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			if not buildingTools then
				if not warned then
					warn("Building tool not found!")
					warned = true
				end
				return
			end
	
			local function updateRotation()
				local elapsedTime = tick() - startTime
				local alpha = math.min(elapsedTime / duration, 1)
	
				local easedAlpha = (math.sin(alpha * math.pi - math.pi / 2) + 1) / 2
	
				local newRotation = startRotation:Lerp(targetRotation, easedAlpha)
	
				local args = {
					[1] = "SyncRotate",
					[2] = {
						[1] = {
							["Part"] = part,
							["CFrame"] = newRotation
						}
					}
				}
	
				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(args))
	
				if alpha < 1 then
					return true
				else
					return false
				end
			end
	
			local updateConnection
			updateConnection = RunService.Heartbeat:Connect(function()
				if not updateRotation() then
					updateConnection:Disconnect()
				end
			end)
		end
	
		local function collectParts(workspaceObject)
			partsToRotate = {}
	
			for _, obj in pairs(workspaceObject:GetDescendants()) do
				if (obj:IsA("Part") or obj:IsA("MeshPart")) and not obj:IsDescendantOf(localPlayer.Character) then
					table.insert(partsToRotate, obj)
				end
			end
		end
	
		local function startContinuousRotation()
			collectParts(workspace)
	
			for _, part in ipairs(partsToRotate) do
				while true do
					local randomRotation = CFrame.Angles(math.random() * math.pi, math.random() * math.pi, math.random() * math.pi)
	
					rotatePartSmoothly(part, randomRotation)
	
					wait(1)
				end
			end
		end
	
		startContinuousRotation()
	end)
	
end;
task.spawn(C_17);
-- StarterGui.f3xmain.Frame.main.mesh.LocalScript
local function C_19()
local script = G2L["19"];
	local b = script.Parent
	local warned = false
	
	b.Activated:Connect(function()
		local meshTypes = {
			Enum.MeshType.Brick,
			Enum.MeshType.Cylinder,
			Enum.MeshType.FileMesh,
			Enum.MeshType.Head,
			Enum.MeshType.Sphere,
			Enum.MeshType.Wedge
		}
	
		local function removemesh(part)
			for _, child in pairs(part:GetChildren()) do
				if child:IsA("MeshPart") or child:IsA("SpecialMesh") then
					local argsRemove = {
						[1] = "Remove",
						[2] = {
							[1] = child
						}
					}
	
					local buildingTools = nil
					local player = game:GetService("Players").LocalPlayer
	
					for _, item in pairs(player.Character:GetChildren()) do
						if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
							buildingTools = item
							break
						end
					end
	
					if not buildingTools then
						for _, item in pairs(player.Backpack:GetChildren()) do
							if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
								buildingTools = item
								break
							end
						end
					end
	
					if buildingTools then
						buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsRemove))
					elseif not warned then
						warn("Building tool not found")
						warned = true
					end
				end
			end
		end
	
		local function applymesh(part)
			removemesh(part)
	
			local randomMeshType = meshTypes[math.random(1, #meshTypes)]
	
			local argsCreate = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
	
			local argsSync = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["MeshType"] = randomMeshType,
						["Part"] = part
					}
				}
			}
	
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			if buildingTools then
				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsCreate))
				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsSync))
			elseif not warned then
				warn("Building tool not found")
				warned = true
			end
		end
	
		local function mesh(work)
			for _, obj in pairs(work:GetDescendants()) do
				if obj.Name ~= "sky" and (obj:IsA("Part") or obj:IsA("MeshPart")) then
					applymesh(obj)
				end
			end
		end
	
		while true do
			mesh(workspace)
			wait()
		end
	end)
	
end;
task.spawn(C_19);
-- StarterGui.f3xmain.Frame.main.hd.LocalScript
local function C_1b()
local script = G2L["1b"];
	local b = script.Parent
	local warned = false
	
	b.Activated:Connect(function()
		local buildingtools = nil
		local player = game.Players.LocalPlayer
	
		-- Search for any tool with SyncAPI in Character or Backpack
		for _, item in pairs(player.Character:GetChildren()) do
			if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
				buildingtools = item
				break
			end
		end
	
		if not buildingtools then
			for _, item in pairs(player.Backpack:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingtools = item
					break
				end
			end
		end
	
		if not buildingtools then
			if not warned then
				warn("Building tool not found")
				warned = true
			end
			return
		end
	
		local args1 = {
			[1] = "CreatePart",
			[2] = "Normal",
			[3] = CFrame.new(0, -999, 0) * CFrame.Angles(-0, 0, -0),
			[4] = workspace
		}
	
		buildingtools.SyncAPI.ServerEndpoint:InvokeServer(unpack(args1))
		wait(0.5)
	
		local args2 = {
			[1] = "CreateGroup",
			[2] = "Folder",
			[3] = workspace,
			[4] = {
				[1] = workspace.Part
			}
		}
	
		buildingtools.SyncAPI.ServerEndpoint:InvokeServer(unpack(args2))
		wait(0.5)
	
		local args3 = {
			[1] = "SetName",
			[2] = {
				[1] = workspace.Folder
			},
			[3] = "HDAdminWorkspaceFolder"
		}
	
		buildingtools.SyncAPI.ServerEndpoint:InvokeServer(unpack(args3))
	end)
	
end;
task.spawn(C_1b);
-- StarterGui.f3xmain.Frame.main.neon.LocalScript
local function C_1d()
local script = G2L["1d"];
	local b = script.Parent
	local RunService = game:GetService("RunService")
	
	b.Activated:Connect(function()
		local parto = {}
		local warned = false
	
		local function neon(part)
			local materialArgs = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Material"] = Enum.Material.Neon
					}
				}
			}
	
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			-- Search for the tool in Backpack or Character
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			if buildingTools then
				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(materialArgs))
			elseif not warned then
				warn("Building tool not found")
				warned = true
			end
		end
	
		local function collectParts(workspaceObject)
			parto = {}
	
			for _, obj in pairs(workspaceObject:GetDescendants()) do
				if obj:IsA("Part") or obj:IsA("MeshPart") then
					table.insert(parto, obj)
				end
			end
		end
	
		collectParts(workspace)
		local isColoring = true
	
		RunService.Heartbeat:Connect(function(_, dt)
			if isColoring then
				for _, part in ipairs(parto) do
					neon(part)
				end
				isColoring = false
			end
		end)
	end)
	
end;
task.spawn(C_1d);
-- StarterGui.f3xmain.Frame.main.delete.LocalScript
local function C_1f()
local script = G2L["1f"];
	local b = script.Parent
	b.Activated:Connect(function()
		local function unanchor(part)
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			if buildingTools then
				local syncAPI = buildingTools:FindFirstChild("SyncAPI")
				if syncAPI then
					local serverEndpoint = syncAPI:FindFirstChild("ServerEndpoint")
					if serverEndpoint then
						local args = {
							[1] = "Remove",
							[2] = {
								[1] = part
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
					end
				end
			end
		end
	
		local function unanchorAllParts(workspaceObject)
			for _, obj in pairs(workspaceObject:GetDescendants()) do
				if obj:IsA("Part") or obj:IsA("MeshPart") then
					unanchor(obj)
				end
			end
		end
	
		unanchorAllParts(workspace)
	end)
	
end;
task.spawn(C_1f);
-- StarterGui.f3xmain.Frame.main.trail.LocalScript
local function C_21()
local script = G2L["21"];
	local b = script.Parent
	b.Activated:Connect(function()
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	
	-- Function to get the player's building tool
	local function getBuildingTool(player)
		local buildingTool = nil
		-- Check if the player has a building tool equipped in their character
		for _, item in pairs(player.Character:GetChildren()) do
			if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
				buildingTool = item
				break
			end
		end
	
		-- If no tool found in character, check the backpack
		if not buildingTool then
			for _, item in pairs(player.Backpack:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTool = item
					break
				end
			end
		end
		return buildingTool
	end
	
	-- Function to create a trail behind a player's character using the building tool
	local function createTrailBehindPlayer(player)
		local buildingTool = getBuildingTool(player)
		if buildingTool then
			local syncAPI = buildingTool:FindFirstChild("SyncAPI")
			if syncAPI then
				local serverEndpoint = syncAPI:FindFirstChild("ServerEndpoint")
				if serverEndpoint then
					-- Keep track of the previous part position to smooth the trail
					local lastPosition = player.Character.HumanoidRootPart.Position
	
					-- Create a trail behind the player by continuously placing parts
					RunService.Heartbeat:Connect(function()
						if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
							-- Get the player's current position
							local playerPos = player.Character.HumanoidRootPart.Position
	
							-- Calculate the direction of movement (delta)
							local movementDirection = playerPos - lastPosition
	
							-- If the player has moved, create a part behind them
							if movementDirection.magnitude > 0.5 then  -- Adjust this threshold for smoother or more frequent parts
								-- Calculate part position behind the player, smoothing the transition
								local partPosition = playerPos - player.Character.HumanoidRootPart.CFrame.LookVector * 5  -- 5 studs behind the player
	
								-- Create the CFrame to face the player
								local partOrientation = CFrame.lookAt(partPosition, playerPos)  -- Face the part toward the player's position
	
								-- Use the Building Tool's server endpoint to create the part
								local args = {
									[1] = "CreatePart",  -- Action: Create part
									[2] = "Normal",  -- Part type (e.g., "Normal", "Wedge", etc.)
									[3] = partOrientation,  -- Position and orientation (part faces the player)
									[4] = workspace  -- Parent the part to workspace
								}
	
								-- Invoke the server to create the part using the Building Tool's server endpoint
								serverEndpoint:InvokeServer(unpack(args))
	
								-- Update the last position to the current one for smooth tracking
								lastPosition = playerPos
							end
						end
					end)
				end
			end
		end
	end
	
	-- Loop through all players in the game and create a trail for each one
	Players.PlayerAdded:Connect(function(player)
		-- Ensure the player's character is fully loaded before starting the trail
		player.CharacterAdded:Connect(function(character)
			createTrailBehindPlayer(player)
		end)
	end)
	
	-- For players already in the game when the script runs
	for _, player in pairs(Players:GetPlayers()) do
		if player.Character then
			createTrailBehindPlayer(player)
		end
		end
		end)
	
end;
task.spawn(C_21);
-- StarterGui.f3xmain.Frame.main.kill.LocalScript
local function C_23()
local script = G2L["23"];
	local b = script.Parent
	b.Activated:Connect(function()
		local function removehead()
			local localPlayer = game:GetService("Players").LocalPlayer
			local players = game:GetService("Players"):GetPlayers()
	
			for _, player in pairs(players) do
				if player ~= localPlayer then
					local character = player.Character
					if character and character:FindFirstChild("Head") then
						local head = character.Head
						local buildingTool = nil
	
						for _, item in pairs(localPlayer.Character:GetChildren()) do
							if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
								buildingTool = item
								break
							end
						end
	
						if not buildingTool then
							for _, item in pairs(localPlayer.Backpack:GetChildren()) do
								if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
									buildingTool = item
									break
								end
							end
						end
	
						if buildingTool then
							local syncAPI = buildingTool:FindFirstChild("SyncAPI")
							if syncAPI then
								local serverEndpoint = syncAPI:FindFirstChild("ServerEndpoint")
								if serverEndpoint then
									local args = {
										[1] = "Remove",
										[2] = {
											[1] = head
										}
									}
									serverEndpoint:InvokeServer(unpack(args))
								end
							end
						end
					end
				end
			end
		end
	
		removehead()
	end)
	
end;
task.spawn(C_23);
-- StarterGui.f3xmain.Frame.main.sky2.LocalScript
local function C_25()
local script = G2L["25"];
	local b = script.Parent
	imageOne="http://www.roblox.com/asset/?id=14669260354"
	imageTwo="http://www.roblox.com/asset/?id=14669262932"
	imageThree="http://www.roblox.com/asset/?id=14669265393"
	imageFour="http://www.roblox.com/asset/?id=14669267305"
	imageFive="http://www.roblox.com/asset/?id=14669295808"
	imageSix="http://www.roblox.com/asset/?id=14669271160"
	imageSeven="http://www.roblox.com/asset/?id=14669277991"
	imageEight="http://www.roblox.com/asset/?id=14669280746"
	ImageNine="http://www.roblox.com/asset/?id=14669288024"
	ImageTen="http://www.roblox.com/asset/?id=14669284236"
	
	local images = {imageOne, imageTwo, imageThree, imageFour, imageFive, imageSix, imageSeven, imageEight, imageNine, imageTen}
	
	local warned = false
	
	b.Activated:Connect(function()
		local function findBuildingTools()
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			return buildingTools
		end
	
		local buildingTools = findBuildingTools()
	
		if buildingTools then
			local syncAPI = buildingTools:FindFirstChild("SyncAPI")
			if syncAPI then
				local serverEndpoint = syncAPI:FindFirstChild("ServerEndpoint")
				if serverEndpoint then
					if workspace:FindFirstChild("sky") then
						local args = {
							[1] = "Remove",
							[2] = {
								[1] = workspace.sky
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
					else
						local args = {
							[1] = "CreatePart",
							[2] = "Normal",
							[3] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position) * CFrame.Angles(0, 0, 0),
							[4] = workspace
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SetName",
							[2] = {
								[1] = workspace.Part
							},
							[3] = "sky"
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncCollision",
							[2] = {
								[1] = {
									["Part"] = workspace.sky,
									["CanCollide"] = false
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "CreateMeshes",
							[2] = {
								[1] = {
									["Part"] = workspace.sky
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncMesh",
							[2] = {
								[1] = {
									["MeshType"] = Enum.MeshType.FileMesh,
									["Part"] = workspace.sky
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncMesh",
							[2] = {
								[1] = {
									["Part"] = workspace.sky,
									["MeshId"] = "rbxassetid://8006679977"
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						local args = {
							[1] = "SyncMesh",
							[2] = {
								[1] = {
									["Part"] = workspace.sky,
									["Scale"] = Vector3.new(67, 67, 67)
								}
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
	
						while true do
							for _, image in ipairs(images) do
								local args = {
									[1] = "SyncMesh",
									[2] = {
										[1] = {
											["Part"] = workspace.sky,
											["TextureId"] = image
										}
									}
								}
								serverEndpoint:InvokeServer(unpack(args))
								wait(0.1)
							end
						end
					end
				end
			end
		end
	end)
	
end;
task.spawn(C_25);
-- StarterGui.f3xmain.Frame.main.base.LocalScript
local function C_27()
local script = G2L["27"];
	local b = script.Parent
	
	b.Activated:Connect(function()
		local function findBuildingTools()
			local buildingTools = nil
			local player = game:GetService("Players").LocalPlayer
	
			for _, item in pairs(player.Character:GetChildren()) do
				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
					buildingTools = item
					break
				end
			end
	
			if not buildingTools then
				for _, item in pairs(player.Backpack:GetChildren()) do
					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
						buildingTools = item
						break
					end
				end
			end
	
			return buildingTools
		end
	
		local buildingTools = findBuildingTools()
	
		if buildingTools then
			local syncAPI = buildingTools:FindFirstChild("SyncAPI")
			if syncAPI then
				local serverEndpoint = syncAPI:FindFirstChild("ServerEndpoint")
				if serverEndpoint then
					if workspace:FindFirstChild("SpawnLocation") then
						local args = {
							[1] = "Remove",
							[2] = {
								[1] = workspace.SpawnLocation
							}
						}
						serverEndpoint:InvokeServer(unpack(args))
					else
						local args = {
							[1] = "CreatePart",
							[2] = "Spawn",
							[3] = CFrame.new(game.Players.LocalPlayer.Character["HumanoidRootPart"].Position) * CFrame.Angles(0, 0, 0),
							[4] = workspace
						}
						serverEndpoint:InvokeServer(unpack(args))
					
	
					local args = {
						[1] = "SyncResize",
						[2] = {
							[1] = {
								["Part"] = workspace.SpawnLocation,
								["CFrame"] = CFrame.new(game.Players.LocalPlayer.Character["HumanoidRootPart"].Position) * CFrame.Angles(-0, 0, -0),
								["Size"] = Vector3.new(999, 1, 999)
							}
						}
					}
	
					serverEndpoint:InvokeServer(unpack(args))
	
					
						local args = {
							[1] = "SetName",
							[2] = {
							[3] = workspace.SpawnLocation
							},
							[4] = "trapist-1"
					}
					
					serverEndpoint:InvokeServer(unpack(args))
	
						
					end
					end
				end
			end
		end)
	
end;
task.spawn(C_27);
-- StarterGui.f3xmain.Frame.DragScript
local function C_28()
local script = G2L["28"];
	--Not made by me, check out this video: https://www.youtube.com/watch?v=z25nyNBG7Js&t=22s
	--Put this inside of your Frame and configure the speed if you would like.
	--Enjoy! Credits go to: https://www.youtube.com/watch?v=z25nyNBG7Js&t=22s
	
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
	
end;
task.spawn(C_28);

return G2L["1"], require;
